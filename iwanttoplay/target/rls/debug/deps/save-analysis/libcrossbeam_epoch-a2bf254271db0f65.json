{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2","program":"C:\\Users\\henri\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","crossbeam_epoch","C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"lazy_static\"","--cfg","feature=\"std\"","-C","metadata=a2bf254271db0f65","-C","extra-filename=-a2bf254271db0f65","--out-dir","c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps","-L","dependency=c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps","--extern","cfg_if=c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps\\libcfg_if-3be2522be8f6f29c.rmeta","--extern","crossbeam_utils=c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps\\libcrossbeam_utils-e921004960ae5b57.rmeta","--extern","lazy_static=c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps\\liblazy_static-464c4af9ded6ca87.rmeta","--extern","maybe_uninit=c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps\\libmaybe_uninit-ab1e66339a21a70e.rmeta","--extern","memoffset=c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps\\libmemoffset-a80f95b47f37a24b.rmeta","--extern","scopeguard=c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps\\libscopeguard-c8726ebb70c8d0b0.rmeta","--cap-lints","allow","--cfg","has_min_const_fn","--error-format=json","--sysroot","C:\\Users\\henri\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Projects\\FreeGpusinPortugal\\iwanttoplay\\target\\rls\\debug\\deps\\libcrossbeam_epoch-a2bf254271db0f65.rmeta"},"prelude":{"crate_id":{"name":"crossbeam_epoch","disambiguator":[4846035740372180744,3671412326437878527]},"crate_root":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src","external_crates":[{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[3363949849689723475,17369360418877894296]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[3747384843019373223,13759942304014052535]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[11478482899240340583,17122159790357076854]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[11061011275580665867,9276968084265305739]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[7114388531242619052,4066821940473693856]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[4334566463604478648,2723111479263688995]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[17667198077615336603,6344526255197668589]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15696432714701482152,16902757851256734107]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[1659229678336314589,8479756127813614445]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8130323418187167188,4636797448496712652]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[1920759351681616324,7198269701569904579]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":12,"id":{"name":"panic_unwind","disambiguator":[17999657139147790221,14614305851743788429]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":13,"id":{"name":"cfg_if","disambiguator":[11258221754735832424,5042964174728427465]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":14,"id":{"name":"maybe_uninit","disambiguator":[9591574051692208246,4056730177941307414]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":15,"id":{"name":"crossbeam_utils","disambiguator":[10963163295691732357,16752959812881896789]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":16,"id":{"name":"lazy_static","disambiguator":[15532968612470391906,9020399163028591659]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":17,"id":{"name":"memoffset","disambiguator":[17805965965738831845,14335317255257989743]}},{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","num":18,"id":{"name":"scopeguard","disambiguator":[17671440959611065076,4620789191473338932]}}],"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3757,"byte_end":3763,"line_start":94,"line_end":94,"column_start":32,"column_end":38},"alias_span":null,"name":"Atomic","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3765,"byte_end":3783,"line_start":94,"line_end":94,"column_start":40,"column_end":58},"alias_span":null,"name":"CompareAndSetError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3785,"byte_end":3806,"line_start":94,"line_end":94,"column_start":60,"column_end":81},"alias_span":null,"name":"CompareAndSetOrdering","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3808,"byte_end":3813,"line_start":94,"line_end":94,"column_start":83,"column_end":88},"alias_span":null,"name":"Owned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3815,"byte_end":3822,"line_start":94,"line_end":94,"column_start":90,"column_end":97},"alias_span":null,"name":"Pointer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3824,"byte_end":3830,"line_start":94,"line_end":94,"column_start":99,"column_end":105},"alias_span":null,"name":"Shared","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3867,"byte_end":3876,"line_start":95,"line_end":95,"column_start":35,"column_end":44},"alias_span":null,"name":"Collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3878,"byte_end":3889,"line_start":95,"line_end":95,"column_start":46,"column_end":57},"alias_span":null,"name":"LocalHandle","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3922,"byte_end":3933,"line_start":96,"line_end":96,"column_start":31,"column_end":42},"alias_span":null,"name":"unprotected","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":3935,"byte_end":3940,"line_start":96,"line_end":96,"column_start":44,"column_end":49},"alias_span":null,"name":"Guard","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4104,"byte_end":4121,"line_start":106,"line_end":106,"column_start":33,"column_end":50},"alias_span":null,"name":"default_collector","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4123,"byte_end":4132,"line_start":106,"line_end":106,"column_start":52,"column_end":61},"alias_span":null,"name":"is_pinned","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":4134,"byte_end":4137,"line_start":106,"line_end":106,"column_start":63,"column_end":66},"alias_span":null,"name":"pin","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":4147,"line_start":1,"line_end":108,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":8},{"krate":0,"index":9},{"krate":0,"index":10},{"krate":0,"index":271},{"krate":0,"index":312},{"krate":0,"index":348},{"krate":0,"index":368},{"krate":0,"index":413},{"krate":0,"index":552},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":679},{"krate":0,"index":682},{"krate":0,"index":685},{"krate":0,"index":688},{"krate":0,"index":691},{"krate":0,"index":694},{"krate":0,"index":695},{"krate":0,"index":698},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":705},{"krate":0,"index":766},{"krate":0,"index":767},{"krate":0,"index":788},{"krate":0,"index":789},{"krate":0,"index":792},{"krate":0,"index":795}],"decl_id":null,"docs":" Epoch-based memory reclamation.","sig":null,"attributes":[{"value":"/ Epoch-based memory reclamation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":0,"byte_end":35,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":36,"byte_end":39,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"/ An interesting problem concurrent collections deal with comes from the remove operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":40,"byte_end":132,"line_start":3,"line_end":3,"column_start":1,"column_end":93}},{"value":"/ Suppose that a thread removes an element from a lock-free map, while another thread is reading","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":133,"byte_end":231,"line_start":4,"line_end":4,"column_start":1,"column_end":99}},{"value":"/ that same element at the same time. The first thread must wait until the second thread stops","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":232,"byte_end":328,"line_start":5,"line_end":5,"column_start":1,"column_end":97}},{"value":"/ reading the element. Only then it is safe to destruct it.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":329,"byte_end":390,"line_start":6,"line_end":6,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":391,"byte_end":394,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ Programming languages that come with garbage collectors solve this problem trivially. The","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":395,"byte_end":488,"line_start":8,"line_end":8,"column_start":1,"column_end":94}},{"value":"/ garbage collector will destruct the removed element when no thread can hold a reference to it","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":489,"byte_end":586,"line_start":9,"line_end":9,"column_start":1,"column_end":98}},{"value":"/ anymore.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":587,"byte_end":599,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":600,"byte_end":603,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ This crate implements a basic memory reclamation mechanism, which is based on epochs. When an","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":604,"byte_end":701,"line_start":12,"line_end":12,"column_start":1,"column_end":98}},{"value":"/ element gets removed from a concurrent collection, it is inserted into a pile of garbage and","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":702,"byte_end":798,"line_start":13,"line_end":13,"column_start":1,"column_end":97}},{"value":"/ marked with the current epoch. Every time a thread accesses a collection, it checks the current","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":799,"byte_end":898,"line_start":14,"line_end":14,"column_start":1,"column_end":100}},{"value":"/ epoch, attempts to increment it, and destructs some garbage that became so old that no thread","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":899,"byte_end":996,"line_start":15,"line_end":15,"column_start":1,"column_end":98}},{"value":"/ can be referencing it anymore.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":997,"byte_end":1031,"line_start":16,"line_end":16,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1032,"byte_end":1035,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ That is the general mechanism behind epoch-based memory reclamation, but the details are a bit","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1036,"byte_end":1134,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ more complicated. Anyhow, memory reclamation is designed to be fully automatic and something","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1135,"byte_end":1231,"line_start":19,"line_end":19,"column_start":1,"column_end":97}},{"value":"/ users of concurrent collections don't have to worry much about.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1232,"byte_end":1299,"line_start":20,"line_end":20,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1300,"byte_end":1303,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ # Pointers","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1304,"byte_end":1318,"line_start":22,"line_end":22,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1319,"byte_end":1322,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Concurrent collections are built using atomic pointers. This module provides [`Atomic`], which","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1323,"byte_end":1421,"line_start":24,"line_end":24,"column_start":1,"column_end":99}},{"value":"/ is just a shared atomic pointer to a heap-allocated object. Loading an [`Atomic`] yields a","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1422,"byte_end":1516,"line_start":25,"line_end":25,"column_start":1,"column_end":95}},{"value":"/ [`Shared`], which is an epoch-protected pointer through which the loaded object can be safely","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1517,"byte_end":1614,"line_start":26,"line_end":26,"column_start":1,"column_end":98}},{"value":"/ read.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1615,"byte_end":1624,"line_start":27,"line_end":27,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1625,"byte_end":1628,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1629,"byte_end":1642,"line_start":29,"line_end":29,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1643,"byte_end":1646,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ Before an [`Atomic`] can be loaded, a participant must be [`pin`]ned. By pinning a participant","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1647,"byte_end":1745,"line_start":31,"line_end":31,"column_start":1,"column_end":99}},{"value":"/ we declare that any object that gets removed from now on must not be destructed just","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1746,"byte_end":1834,"line_start":32,"line_end":32,"column_start":1,"column_end":89}},{"value":"/ yet. Garbage collection of newly removed objects is suspended until the participant gets","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1835,"byte_end":1927,"line_start":33,"line_end":33,"column_start":1,"column_end":93}},{"value":"/ unpinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1928,"byte_end":1941,"line_start":34,"line_end":34,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1942,"byte_end":1945,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"/ # Garbage","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1946,"byte_end":1959,"line_start":36,"line_end":36,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1960,"byte_end":1963,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ Objects that get removed from concurrent collections must be stashed away until all currently","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":1964,"byte_end":2061,"line_start":38,"line_end":38,"column_start":1,"column_end":98}},{"value":"/ pinned participants get unpinned. Such objects can be stored into a thread-local or global","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2062,"byte_end":2156,"line_start":39,"line_end":39,"column_start":1,"column_end":95}},{"value":"/ storage, where they are kept until the right time for their destruction comes.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2157,"byte_end":2239,"line_start":40,"line_end":40,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2240,"byte_end":2243,"line_start":41,"line_end":41,"column_start":1,"column_end":4}},{"value":"/ There is a global shared instance of garbage queue. You can [`defer`] the execution of an","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2244,"byte_end":2337,"line_start":42,"line_end":42,"column_start":1,"column_end":94}},{"value":"/ arbitrary function until the global epoch is advanced enough. Most notably, concurrent data","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2338,"byte_end":2433,"line_start":43,"line_end":43,"column_start":1,"column_end":96}},{"value":"/ structures may defer the deallocation of an object.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2434,"byte_end":2489,"line_start":44,"line_end":44,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2490,"byte_end":2493,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ # APIs","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2494,"byte_end":2504,"line_start":46,"line_end":46,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2505,"byte_end":2508,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"/ For majority of use cases, just use the default garbage collector by invoking [`pin`]. If you","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2509,"byte_end":2606,"line_start":48,"line_end":48,"column_start":1,"column_end":98}},{"value":"/ want to create your own garbage collector, use the [`Collector`] API.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2607,"byte_end":2680,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2681,"byte_end":2684,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2685,"byte_end":2719,"line_start":51,"line_end":51,"column_start":1,"column_end":35}},{"value":"/ [`Collector`]: struct.Collector.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2720,"byte_end":2760,"line_start":52,"line_end":52,"column_start":1,"column_end":41}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2761,"byte_end":2795,"line_start":53,"line_end":53,"column_start":1,"column_end":35}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2796,"byte_end":2820,"line_start":54,"line_end":54,"column_start":1,"column_end":25}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2821,"byte_end":2866,"line_start":55,"line_end":55,"column_start":1,"column_end":46}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2868,"byte_end":2890,"line_start":57,"line_end":57,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\lib.rs","byte_start":2891,"byte_end":2930,"line_start":58,"line_end":58,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":58},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777169,"byte_end":8777187,"line_start":27,"line_end":27,"column_start":12,"column_end":30},"name":"CompareAndSetError","qualname":"::atomic::CompareAndSetError","value":"CompareAndSetError { current, new }","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63}],"decl_id":null,"docs":" The error returned on failed compare-and-set operation.\n","sig":null,"attributes":[{"value":"/ The error returned on failed compare-and-set operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777098,"byte_end":8777157,"line_start":26,"line_end":26,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":62},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777301,"byte_end":8777308,"line_start":29,"line_end":29,"column_start":9,"column_end":16},"name":"current","qualname":"::atomic::CompareAndSetError::current","value":"atomic::Shared<'g, T>","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The value in the atomic pointer at the time of the failed operation.\n","sig":null,"attributes":[{"value":"/ The value in the atomic pointer at the time of the failed operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777220,"byte_end":8777292,"line_start":28,"line_end":28,"column_start":5,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777394,"byte_end":8777397,"line_start":32,"line_end":32,"column_start":9,"column_end":12},"name":"new","qualname":"::atomic::CompareAndSetError::new","value":"P","parent":{"krate":0,"index":58},"children":[],"decl_id":null,"docs":" The new value, which the operation failed to store.\n","sig":null,"attributes":[{"value":"/ The new value, which the operation failed to store.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777330,"byte_end":8777385,"line_start":31,"line_end":31,"column_start":5,"column_end":60}}]},{"kind":"Trait","id":{"krate":0,"index":69},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778282,"byte_end":8778303,"line_start":55,"line_end":55,"column_start":11,"column_end":32},"name":"CompareAndSetOrdering","qualname":"::atomic::CompareAndSetOrdering","value":"CompareAndSetOrdering","parent":null,"children":[{"krate":0,"index":70},{"krate":0,"index":71}],"decl_id":null,"docs":" Memory orderings for compare-and-set operations.","sig":null,"attributes":[{"value":"/ Memory orderings for compare-and-set operations.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777712,"byte_end":8777764,"line_start":44,"line_end":44,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777765,"byte_end":8777768,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ A compare-and-set operation can have different memory orderings depending on whether it","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777769,"byte_end":8777860,"line_start":46,"line_end":46,"column_start":1,"column_end":92}},{"value":"/ succeeds or fails. This trait generalizes different ways of specifying memory orderings.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777861,"byte_end":8777953,"line_start":47,"line_end":47,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777954,"byte_end":8777957,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ The two ways of specifying orderings for compare-and-set are:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777958,"byte_end":8778023,"line_start":49,"line_end":49,"column_start":1,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778024,"byte_end":8778027,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ 1. Just one `Ordering` for the success case. In case of failure, the strongest appropriate","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778028,"byte_end":8778122,"line_start":51,"line_end":51,"column_start":1,"column_end":95}},{"value":"/    ordering is chosen.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778123,"byte_end":8778149,"line_start":52,"line_end":52,"column_start":1,"column_end":27}},{"value":"/ 2. A pair of `Ordering`s. The first one is for the success case, while the second one is","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778150,"byte_end":8778242,"line_start":53,"line_end":53,"column_start":1,"column_end":93}},{"value":"/    for the failure case.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778243,"byte_end":8778271,"line_start":54,"line_end":54,"column_start":1,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":70},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778369,"byte_end":8778376,"line_start":57,"line_end":57,"column_start":8,"column_end":15},"name":"success","qualname":"::atomic::CompareAndSetOrdering::success","value":"pub fn success(&Self) -> Ordering","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" The ordering of the operation when it succeeds.\n","sig":null,"attributes":[{"value":"/ The ordering of the operation when it succeeds.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778310,"byte_end":8778361,"line_start":56,"line_end":56,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":71},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778594,"byte_end":8778601,"line_start":63,"line_end":63,"column_start":8,"column_end":15},"name":"failure","qualname":"::atomic::CompareAndSetOrdering::failure","value":"pub fn failure(&Self) -> Ordering","parent":{"krate":0,"index":69},"children":[],"decl_id":null,"docs":" The ordering of the operation when it fails.","sig":null,"attributes":[{"value":"/ The ordering of the operation when it fails.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778402,"byte_end":8778450,"line_start":59,"line_end":59,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778455,"byte_end":8778458,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ The failure ordering can't be `Release` or `AcqRel` and must be equivalent or weaker than","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778463,"byte_end":8778556,"line_start":61,"line_end":61,"column_start":5,"column_end":98}},{"value":"/ the success ordering.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778561,"byte_end":8778586,"line_start":62,"line_end":62,"column_start":5,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780373,"byte_end":8780379,"line_start":127,"line_end":127,"column_start":12,"column_end":18},"name":"Atomic","qualname":"::atomic::Atomic","value":"Atomic {  }","parent":null,"children":[{"krate":0,"index":88},{"krate":0,"index":89}],"decl_id":null,"docs":" An atomic pointer that can be safely shared between threads.","sig":null,"attributes":[{"value":"/ An atomic pointer that can be safely shared between threads.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8779934,"byte_end":8779998,"line_start":118,"line_end":118,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8779999,"byte_end":8780002,"line_start":119,"line_end":119,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780003,"byte_end":8780101,"line_start":120,"line_end":120,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.  More precisely, a tag should be less than `(1 <<","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780102,"byte_end":8780194,"line_start":121,"line_end":121,"column_start":1,"column_end":93}},{"value":"/ mem::align_of::<T>().trailing_zeros())`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780195,"byte_end":8780239,"line_start":122,"line_end":122,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780240,"byte_end":8780243,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ Any method that loads the pointer must be passed a reference to a [`Guard`].","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780244,"byte_end":8780324,"line_start":124,"line_end":124,"column_start":1,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780325,"byte_end":8780328,"line_start":125,"line_end":125,"column_start":1,"column_end":4}},{"value":"/ [`Guard`]: struct.Guard.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780329,"byte_end":8780361,"line_start":126,"line_end":126,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781381,"byte_end":8781385,"line_start":171,"line_end":171,"column_start":18,"column_end":22},"name":"null","qualname":"<Atomic<T>>::null","value":"pub const fn null() -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null atomic pointer.","sig":null,"attributes":[{"value":"/ Returns a new null atomic pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781153,"byte_end":8781191,"line_start":161,"line_end":161,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781196,"byte_end":8781199,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781204,"byte_end":8781218,"line_start":163,"line_end":163,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781223,"byte_end":8781226,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781231,"byte_end":8781238,"line_start":165,"line_end":165,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781243,"byte_end":8781275,"line_start":166,"line_end":166,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781280,"byte_end":8781283,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::null();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781288,"byte_end":8781322,"line_start":168,"line_end":168,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781327,"byte_end":8781334,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"cfg(has_min_const_fn)","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781339,"byte_end":8781363,"line_start":170,"line_end":170,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781745,"byte_end":8781748,"line_start":187,"line_end":187,"column_start":12,"column_end":15},"name":"new","qualname":"<Atomic<T>>::new","value":"pub fn new(T) -> Atomic<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new atomic pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new atomic pointer pointing to it.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781512,"byte_end":8781594,"line_start":178,"line_end":178,"column_start":5,"column_end":87}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781599,"byte_end":8781602,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781607,"byte_end":8781621,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781626,"byte_end":8781629,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781634,"byte_end":8781641,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781646,"byte_end":8781678,"line_start":183,"line_end":183,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781683,"byte_end":8781686,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781691,"byte_end":8781721,"line_start":185,"line_end":185,"column_start":5,"column_end":35}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781726,"byte_end":8781733,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782372,"byte_end":8782376,"line_start":208,"line_end":208,"column_start":12,"column_end":16},"name":"load","qualname":"<Atomic<T>>::load","value":"pub fn load<'g>(&Self, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781823,"byte_end":8781868,"line_start":191,"line_end":191,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781873,"byte_end":8781876,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781881,"byte_end":8781971,"line_start":193,"line_end":193,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781976,"byte_end":8781990,"line_start":194,"line_end":194,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8781995,"byte_end":8781998,"line_start":195,"line_end":195,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782003,"byte_end":8782081,"line_start":196,"line_end":196,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782086,"byte_end":8782089,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782094,"byte_end":8782108,"line_start":198,"line_end":198,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782113,"byte_end":8782116,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782121,"byte_end":8782128,"line_start":200,"line_end":200,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782133,"byte_end":8782182,"line_start":201,"line_end":201,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782187,"byte_end":8782231,"line_start":202,"line_end":202,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782236,"byte_end":8782239,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782244,"byte_end":8782274,"line_start":204,"line_end":204,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782279,"byte_end":8782309,"line_start":205,"line_end":205,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782314,"byte_end":8782348,"line_start":206,"line_end":206,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782353,"byte_end":8782360,"line_start":207,"line_end":207,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783383,"byte_end":8783395,"line_start":233,"line_end":233,"column_start":12,"column_end":24},"name":"load_consume","qualname":"<Atomic<T>>::load_consume","value":"pub fn load_consume<'g>(&Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","sig":null,"attributes":[{"value":"/ Loads a `Shared` from the atomic pointer using a \"consume\" memory ordering.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782506,"byte_end":8782585,"line_start":212,"line_end":212,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782590,"byte_end":8782593,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ This is similar to the \"acquire\" ordering, except that an ordering is","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782598,"byte_end":8782671,"line_start":214,"line_end":214,"column_start":5,"column_end":78}},{"value":"/ only guaranteed with operations that \"depend on\" the result of the load.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782676,"byte_end":8782752,"line_start":215,"line_end":215,"column_start":5,"column_end":81}},{"value":"/ However consume loads are usually much faster than acquire loads on","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782757,"byte_end":8782828,"line_start":216,"line_end":216,"column_start":5,"column_end":76}},{"value":"/ architectures with a weak memory model since they don't require memory","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782833,"byte_end":8782907,"line_start":217,"line_end":217,"column_start":5,"column_end":79}},{"value":"/ fence instructions.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782912,"byte_end":8782935,"line_start":218,"line_end":218,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782940,"byte_end":8782943,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ The exact definition of \"depend on\" is a bit vague, but it works as you","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8782948,"byte_end":8783023,"line_start":220,"line_end":220,"column_start":5,"column_end":80}},{"value":"/ would expect in practice since a lot of software, especially the Linux","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783028,"byte_end":8783102,"line_start":221,"line_end":221,"column_start":5,"column_end":79}},{"value":"/ kernel, rely on this behavior.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783107,"byte_end":8783141,"line_start":222,"line_end":222,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783146,"byte_end":8783149,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783154,"byte_end":8783168,"line_start":224,"line_end":224,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783173,"byte_end":8783176,"line_start":225,"line_end":225,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783181,"byte_end":8783188,"line_start":226,"line_end":226,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783193,"byte_end":8783242,"line_start":227,"line_end":227,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783247,"byte_end":8783250,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783255,"byte_end":8783285,"line_start":229,"line_end":229,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783290,"byte_end":8783320,"line_start":230,"line_end":230,"column_start":5,"column_end":35}},{"value":"/ let p = a.load_consume(guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783325,"byte_end":8783359,"line_start":231,"line_end":231,"column_start":5,"column_end":39}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783364,"byte_end":8783371,"line_start":232,"line_end":232,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784109,"byte_end":8784114,"line_start":254,"line_end":254,"column_start":12,"column_end":17},"name":"store","qualname":"<Atomic<T>>::store","value":"pub fn store<'g, P: Pointer<T>>(&Self, P, Ordering)","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783515,"byte_end":8783580,"line_start":237,"line_end":237,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783585,"byte_end":8783588,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783593,"byte_end":8783683,"line_start":239,"line_end":239,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783688,"byte_end":8783702,"line_start":240,"line_end":240,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783707,"byte_end":8783710,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783715,"byte_end":8783793,"line_start":242,"line_end":242,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783798,"byte_end":8783801,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783806,"byte_end":8783820,"line_start":244,"line_end":244,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783825,"byte_end":8783828,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783833,"byte_end":8783840,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783845,"byte_end":8783909,"line_start":247,"line_end":247,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783914,"byte_end":8783958,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783963,"byte_end":8783966,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8783971,"byte_end":8784001,"line_start":250,"line_end":250,"column_start":5,"column_end":35}},{"value":"/ a.store(Shared::null(), SeqCst);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784006,"byte_end":8784042,"line_start":251,"line_end":251,"column_start":5,"column_end":41}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784047,"byte_end":8784085,"line_start":252,"line_end":252,"column_start":5,"column_end":43}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784090,"byte_end":8784097,"line_start":253,"line_end":253,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":106},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784866,"byte_end":8784870,"line_start":276,"line_end":276,"column_start":12,"column_end":16},"name":"swap","qualname":"<Atomic<T>>::swap","value":"pub fn swap<'g, P: Pointer<T>>(&Self, P, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous\n `Shared`.","sig":null,"attributes":[{"value":"/ Stores a `Shared` or `Owned` pointer into the atomic pointer, returning the previous","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784225,"byte_end":8784313,"line_start":258,"line_end":258,"column_start":5,"column_end":93}},{"value":"/ `Shared`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784318,"byte_end":8784331,"line_start":259,"line_end":259,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784336,"byte_end":8784339,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784344,"byte_end":8784434,"line_start":261,"line_end":261,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784439,"byte_end":8784453,"line_start":262,"line_end":262,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784458,"byte_end":8784461,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784466,"byte_end":8784544,"line_start":264,"line_end":264,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784549,"byte_end":8784552,"line_start":265,"line_end":265,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784557,"byte_end":8784571,"line_start":266,"line_end":266,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784576,"byte_end":8784579,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784584,"byte_end":8784591,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784596,"byte_end":8784660,"line_start":269,"line_end":269,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784665,"byte_end":8784709,"line_start":270,"line_end":270,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784714,"byte_end":8784717,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784722,"byte_end":8784752,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784757,"byte_end":8784787,"line_start":273,"line_end":273,"column_start":5,"column_end":35}},{"value":"/ let p = a.swap(Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784792,"byte_end":8784842,"line_start":274,"line_end":274,"column_start":5,"column_end":55}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8784847,"byte_end":8784854,"line_start":275,"line_end":275,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8786217,"byte_end":8786232,"line_start":306,"line_end":306,"column_start":12,"column_end":27},"name":"compare_and_set","qualname":"<Atomic<T>>::compare_and_set","value":"pub fn compare_and_set<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785041,"byte_end":8785137,"line_start":280,"line_end":280,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785142,"byte_end":8785236,"line_start":281,"line_end":281,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785241,"byte_end":8785312,"line_start":282,"line_end":282,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785317,"byte_end":8785320,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ The return value is a result indicating whether the new pointer was written. On success the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785325,"byte_end":8785420,"line_start":284,"line_end":284,"column_start":5,"column_end":100}},{"value":"/ pointer that was written is returned. On failure the actual current value and `new` are","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785425,"byte_end":8785516,"line_start":285,"line_end":285,"column_start":5,"column_end":96}},{"value":"/ returned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785521,"byte_end":8785534,"line_start":286,"line_end":286,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785539,"byte_end":8785542,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785547,"byte_end":8785632,"line_start":288,"line_end":288,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785637,"byte_end":8785668,"line_start":289,"line_end":289,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785673,"byte_end":8785676,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785681,"byte_end":8785744,"line_start":291,"line_end":291,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785749,"byte_end":8785752,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785757,"byte_end":8785771,"line_start":293,"line_end":293,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785776,"byte_end":8785779,"line_start":294,"line_end":294,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785784,"byte_end":8785791,"line_start":295,"line_end":295,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785796,"byte_end":8785860,"line_start":296,"line_end":296,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785865,"byte_end":8785909,"line_start":297,"line_end":297,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785914,"byte_end":8785917,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785922,"byte_end":8785952,"line_start":299,"line_end":299,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785957,"byte_end":8785960,"line_start":300,"line_end":300,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8785965,"byte_end":8785995,"line_start":301,"line_end":301,"column_start":5,"column_end":35}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8786000,"byte_end":8786041,"line_start":302,"line_end":302,"column_start":5,"column_end":46}},{"value":"/ let res1 = a.compare_and_set(curr, Shared::null(), SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8786046,"byte_end":8786116,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ let res2 = a.compare_and_set(curr, Owned::new(5678), SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8786121,"byte_end":8786193,"line_start":304,"line_end":304,"column_start":5,"column_end":77}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8786198,"byte_end":8786205,"line_start":305,"line_end":305,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":115},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788783,"byte_end":8788803,"line_start":376,"line_end":376,"column_start":12,"column_end":32},"name":"compare_and_set_weak","qualname":"<Atomic<T>>::compare_and_set_weak","value":"pub fn compare_and_set_weak<'g, O, P>(&Self, Shared<, T>, P, O, &'g Guard)\n-> Result<Shared, CompareAndSetError> where O: CompareAndSetOrdering,\nP: Pointer<T>","parent":null,"children":[],"decl_id":null,"docs":" Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current\n value is the same as `current`. The tag is also taken into account, so two pointers to the\n same object, but with different tags, will not be considered equal.","sig":null,"attributes":[{"value":"/ Stores the pointer `new` (either `Shared` or `Owned`) into the atomic pointer if the current","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8786897,"byte_end":8786993,"line_start":329,"line_end":329,"column_start":5,"column_end":101}},{"value":"/ value is the same as `current`. The tag is also taken into account, so two pointers to the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8786998,"byte_end":8787092,"line_start":330,"line_end":330,"column_start":5,"column_end":99}},{"value":"/ same object, but with different tags, will not be considered equal.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787097,"byte_end":8787168,"line_start":331,"line_end":331,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787173,"byte_end":8787176,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ Unlike [`compare_and_set`], this method is allowed to spuriously fail even when comparison","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787181,"byte_end":8787275,"line_start":333,"line_end":333,"column_start":5,"column_end":99}},{"value":"/ succeeds, which can result in more efficient code on some platforms.  The return value is a","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787280,"byte_end":8787375,"line_start":334,"line_end":334,"column_start":5,"column_end":100}},{"value":"/ result indicating whether the new pointer was written. On success the pointer that was","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787380,"byte_end":8787470,"line_start":335,"line_end":335,"column_start":5,"column_end":95}},{"value":"/ written is returned. On failure the actual current value and `new` are returned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787475,"byte_end":8787559,"line_start":336,"line_end":336,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787564,"byte_end":8787567,"line_start":337,"line_end":337,"column_start":5,"column_end":8}},{"value":"/ This method takes a [`CompareAndSetOrdering`] argument which describes the memory","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787572,"byte_end":8787657,"line_start":338,"line_end":338,"column_start":5,"column_end":90}},{"value":"/ ordering of this operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787662,"byte_end":8787693,"line_start":339,"line_end":339,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787698,"byte_end":8787701,"line_start":340,"line_end":340,"column_start":5,"column_end":8}},{"value":"/ [`compare_and_set`]: struct.Atomic.html#method.compare_and_set","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787706,"byte_end":8787772,"line_start":341,"line_end":341,"column_start":5,"column_end":71}},{"value":"/ [`CompareAndSetOrdering`]: trait.CompareAndSetOrdering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787777,"byte_end":8787840,"line_start":342,"line_end":342,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787845,"byte_end":8787848,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787853,"byte_end":8787867,"line_start":344,"line_end":344,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787872,"byte_end":8787875,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787880,"byte_end":8787887,"line_start":346,"line_end":346,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned, Shared};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787892,"byte_end":8787956,"line_start":347,"line_end":347,"column_start":5,"column_end":69}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8787961,"byte_end":8788005,"line_start":348,"line_end":348,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788010,"byte_end":8788013,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788018,"byte_end":8788048,"line_start":350,"line_end":350,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788053,"byte_end":8788083,"line_start":351,"line_end":351,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788088,"byte_end":8788091,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ let mut new = Owned::new(5678);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788096,"byte_end":8788131,"line_start":353,"line_end":353,"column_start":5,"column_end":40}},{"value":"/ let mut ptr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788136,"byte_end":8788176,"line_start":354,"line_end":354,"column_start":5,"column_end":45}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788181,"byte_end":8788191,"line_start":355,"line_end":355,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(ptr, new, SeqCst, guard) {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788196,"byte_end":8788259,"line_start":356,"line_end":356,"column_start":5,"column_end":68}},{"value":"/         Ok(p) => {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788264,"byte_end":8788286,"line_start":357,"line_end":357,"column_start":5,"column_end":27}},{"value":"/             ptr = p;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788291,"byte_end":8788315,"line_start":358,"line_end":358,"column_start":5,"column_end":29}},{"value":"/             break;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788320,"byte_end":8788342,"line_start":359,"line_end":359,"column_start":5,"column_end":27}},{"value":"/         }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788347,"byte_end":8788360,"line_start":360,"line_end":360,"column_start":5,"column_end":18}},{"value":"/         Err(err) => {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788365,"byte_end":8788390,"line_start":361,"line_end":361,"column_start":5,"column_end":30}},{"value":"/             ptr = err.current;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788395,"byte_end":8788429,"line_start":362,"line_end":362,"column_start":5,"column_end":39}},{"value":"/             new = err.new;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788434,"byte_end":8788464,"line_start":363,"line_end":363,"column_start":5,"column_end":35}},{"value":"/         }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788469,"byte_end":8788482,"line_start":364,"line_end":364,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788487,"byte_end":8788496,"line_start":365,"line_end":365,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788501,"byte_end":8788506,"line_start":366,"line_end":366,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788511,"byte_end":8788514,"line_start":367,"line_end":367,"column_start":5,"column_end":8}},{"value":"/ let mut curr = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788519,"byte_end":8788560,"line_start":368,"line_end":368,"column_start":5,"column_end":46}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788565,"byte_end":8788575,"line_start":369,"line_end":369,"column_start":5,"column_end":15}},{"value":"/     match a.compare_and_set_weak(curr, Shared::null(), SeqCst, guard) {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788580,"byte_end":8788655,"line_start":370,"line_end":370,"column_start":5,"column_end":80}},{"value":"/         Ok(_) => break,","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788660,"byte_end":8788687,"line_start":371,"line_end":371,"column_start":5,"column_end":32}},{"value":"/         Err(err) => curr = err.current,","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788692,"byte_end":8788735,"line_start":372,"line_end":372,"column_start":5,"column_end":48}},{"value":"/     }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788740,"byte_end":8788749,"line_start":373,"line_end":373,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788754,"byte_end":8788759,"line_start":374,"line_end":374,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8788764,"byte_end":8788771,"line_start":375,"line_end":375,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":121},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790295,"byte_end":8790304,"line_start":420,"line_end":420,"column_start":12,"column_end":21},"name":"fetch_and","qualname":"<Atomic<T>>::fetch_and","value":"pub fn fetch_and<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"and\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"and\" with the current tag.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789473,"byte_end":8789512,"line_start":399,"line_end":399,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789517,"byte_end":8789520,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"and\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789525,"byte_end":8789619,"line_start":401,"line_end":401,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789624,"byte_end":8789680,"line_start":402,"line_end":402,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789685,"byte_end":8789688,"line_start":403,"line_end":403,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789693,"byte_end":8789783,"line_start":404,"line_end":404,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789788,"byte_end":8789802,"line_start":405,"line_end":405,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789807,"byte_end":8789810,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789815,"byte_end":8789893,"line_start":407,"line_end":407,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789898,"byte_end":8789901,"line_start":408,"line_end":408,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789906,"byte_end":8789920,"line_start":409,"line_end":409,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789925,"byte_end":8789928,"line_start":410,"line_end":410,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789933,"byte_end":8789940,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8789945,"byte_end":8790002,"line_start":412,"line_end":412,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790007,"byte_end":8790051,"line_start":413,"line_end":413,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790056,"byte_end":8790059,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(3));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790064,"byte_end":8790124,"line_start":415,"line_end":415,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790129,"byte_end":8790159,"line_start":416,"line_end":416,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_and(2, SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790164,"byte_end":8790219,"line_start":417,"line_end":417,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790224,"byte_end":8790271,"line_start":418,"line_end":418,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790276,"byte_end":8790283,"line_start":419,"line_end":419,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791294,"byte_end":8791302,"line_start":445,"line_end":445,"column_start":12,"column_end":20},"name":"fetch_or","qualname":"<Atomic<T>>::fetch_or","value":"pub fn fetch_or<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"or\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"or\" with the current tag.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790475,"byte_end":8790513,"line_start":424,"line_end":424,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790518,"byte_end":8790521,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"or\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790526,"byte_end":8790619,"line_start":426,"line_end":426,"column_start":5,"column_end":98}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790624,"byte_end":8790680,"line_start":427,"line_end":427,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790685,"byte_end":8790688,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790693,"byte_end":8790783,"line_start":429,"line_end":429,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790788,"byte_end":8790802,"line_start":430,"line_end":430,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790807,"byte_end":8790810,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790815,"byte_end":8790893,"line_start":432,"line_end":432,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790898,"byte_end":8790901,"line_start":433,"line_end":433,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790906,"byte_end":8790920,"line_start":434,"line_end":434,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790925,"byte_end":8790928,"line_start":435,"line_end":435,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790933,"byte_end":8790940,"line_start":436,"line_end":436,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8790945,"byte_end":8791002,"line_start":437,"line_end":437,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791007,"byte_end":8791051,"line_start":438,"line_end":438,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791056,"byte_end":8791059,"line_start":439,"line_end":439,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791064,"byte_end":8791124,"line_start":440,"line_end":440,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791129,"byte_end":8791159,"line_start":441,"line_end":441,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_or(2, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791164,"byte_end":8791218,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 3);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791223,"byte_end":8791270,"line_start":443,"line_end":443,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791275,"byte_end":8791282,"line_start":444,"line_end":444,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":125},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792293,"byte_end":8792302,"line_start":470,"line_end":470,"column_start":12,"column_end":21},"name":"fetch_xor","qualname":"<Atomic<T>>::fetch_xor","value":"pub fn fetch_xor<'g>(&Self, usize, Ordering, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Bitwise \"xor\" with the current tag.","sig":null,"attributes":[{"value":"/ Bitwise \"xor\" with the current tag.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791471,"byte_end":8791510,"line_start":449,"line_end":449,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791515,"byte_end":8791518,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ Performs a bitwise \"xor\" operation on the current tag and the argument `val`, and sets the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791523,"byte_end":8791617,"line_start":451,"line_end":451,"column_start":5,"column_end":99}},{"value":"/ new tag to the result. Returns the previous pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791622,"byte_end":8791678,"line_start":452,"line_end":452,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791683,"byte_end":8791686,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ This method takes an [`Ordering`] argument which describes the memory ordering of this","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791691,"byte_end":8791781,"line_start":454,"line_end":454,"column_start":5,"column_end":95}},{"value":"/ operation.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791786,"byte_end":8791800,"line_start":455,"line_end":455,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791805,"byte_end":8791808,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ [`Ordering`]: https://doc.rust-lang.org/std/sync/atomic/enum.Ordering.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791813,"byte_end":8791891,"line_start":457,"line_end":457,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791896,"byte_end":8791899,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791904,"byte_end":8791918,"line_start":459,"line_end":459,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791923,"byte_end":8791926,"line_start":460,"line_end":460,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791931,"byte_end":8791938,"line_start":461,"line_end":461,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Shared};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8791943,"byte_end":8792000,"line_start":462,"line_end":462,"column_start":5,"column_end":62}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792005,"byte_end":8792049,"line_start":463,"line_end":463,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792054,"byte_end":8792057,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<i32>::from(Shared::null().with_tag(1));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792062,"byte_end":8792122,"line_start":465,"line_end":465,"column_start":5,"column_end":65}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792127,"byte_end":8792157,"line_start":466,"line_end":466,"column_start":5,"column_end":35}},{"value":"/ assert_eq!(a.fetch_xor(3, SeqCst, guard).tag(), 1);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792162,"byte_end":8792217,"line_start":467,"line_end":467,"column_start":5,"column_end":60}},{"value":"/ assert_eq!(a.load(SeqCst, guard).tag(), 2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792222,"byte_end":8792269,"line_start":468,"line_end":468,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792274,"byte_end":8792281,"line_start":469,"line_end":469,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793599,"byte_end":8793609,"line_start":508,"line_end":508,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Atomic<T>>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792472,"byte_end":8792507,"line_start":474,"line_end":474,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792512,"byte_end":8792515,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ This consumes the atomic and converts it into [`Owned`]. As [`Atomic`] doesn't have a","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792520,"byte_end":8792609,"line_start":476,"line_end":476,"column_start":5,"column_end":94}},{"value":"/ destructor and doesn't drop the pointee while [`Owned`] does, this is suitable for","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792614,"byte_end":8792700,"line_start":477,"line_end":477,"column_start":5,"column_end":91}},{"value":"/ destructors of data structures.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792705,"byte_end":8792740,"line_start":478,"line_end":478,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792745,"byte_end":8792748,"line_start":479,"line_end":479,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792753,"byte_end":8792765,"line_start":480,"line_end":480,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792770,"byte_end":8792773,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792778,"byte_end":8792837,"line_start":482,"line_end":482,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792842,"byte_end":8792845,"line_start":483,"line_end":483,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792850,"byte_end":8792862,"line_start":484,"line_end":484,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792867,"byte_end":8792870,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792875,"byte_end":8792962,"line_start":486,"line_end":486,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8792967,"byte_end":8793000,"line_start":487,"line_end":487,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793005,"byte_end":8793008,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793013,"byte_end":8793027,"line_start":489,"line_end":489,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793032,"byte_end":8793035,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793040,"byte_end":8793051,"line_start":491,"line_end":491,"column_start":5,"column_end":16}},{"value":"/ # use std::mem;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793056,"byte_end":8793075,"line_start":492,"line_end":492,"column_start":5,"column_end":24}},{"value":"/ # use crossbeam_epoch::Atomic;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793080,"byte_end":8793114,"line_start":493,"line_end":493,"column_start":5,"column_end":39}},{"value":"/ struct DataStructure {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793119,"byte_end":8793145,"line_start":494,"line_end":494,"column_start":5,"column_end":31}},{"value":"/     ptr: Atomic<usize>,","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793150,"byte_end":8793177,"line_start":495,"line_end":495,"column_start":5,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793182,"byte_end":8793187,"line_start":496,"line_end":496,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793192,"byte_end":8793195,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ impl Drop for DataStructure {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793200,"byte_end":8793233,"line_start":498,"line_end":498,"column_start":5,"column_end":38}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793238,"byte_end":8793266,"line_start":499,"line_end":499,"column_start":5,"column_end":33}},{"value":"/         // By now the DataStructure lives only in our thread and we are sure we don't hold","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793271,"byte_end":8793365,"line_start":500,"line_end":500,"column_start":5,"column_end":99}},{"value":"/         // any Shared or & to it ourselves.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793370,"byte_end":8793417,"line_start":501,"line_end":501,"column_start":5,"column_end":52}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793422,"byte_end":8793442,"line_start":502,"line_end":502,"column_start":5,"column_end":25}},{"value":"/             drop(mem::replace(&mut self.ptr, Atomic::null()).into_owned());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793447,"byte_end":8793526,"line_start":503,"line_end":503,"column_start":5,"column_end":84}},{"value":"/         }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793531,"byte_end":8793544,"line_start":504,"line_end":504,"column_start":5,"column_end":18}},{"value":"/     }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793549,"byte_end":8793558,"line_start":505,"line_end":505,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793563,"byte_end":8793568,"line_start":506,"line_end":506,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793573,"byte_end":8793580,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":156},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796079,"byte_end":8796086,"line_start":611,"line_end":611,"column_start":11,"column_end":18},"name":"Pointer","qualname":"::atomic::Pointer","value":"Pointer<T>","parent":null,"children":[{"krate":0,"index":158},{"krate":0,"index":159}],"decl_id":null,"docs":" A trait for either `Owned` or `Shared` pointers.\n","sig":null,"attributes":[{"value":"/ A trait for either `Owned` or `Shared` pointers.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796016,"byte_end":8796068,"line_start":610,"line_end":610,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":158},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796158,"byte_end":8796168,"line_start":613,"line_end":613,"column_start":8,"column_end":18},"name":"into_usize","qualname":"::atomic::Pointer::into_usize","value":"pub fn into_usize(Self) -> usize","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Returns the machine representation of the pointer.\n","sig":null,"attributes":[{"value":"/ Returns the machine representation of the pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796096,"byte_end":8796150,"line_start":612,"line_end":612,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":159},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796269,"byte_end":8796279,"line_start":616,"line_end":616,"column_start":15,"column_end":25},"name":"from_usize","qualname":"::atomic::Pointer::from_usize","value":"pub unsafe fn from_usize(usize) -> Self","parent":{"krate":0,"index":156},"children":[],"decl_id":null,"docs":" Returns a new pointer pointing to the tagged pointer `data`.\n","sig":null,"attributes":[{"value":"/ Returns a new pointer pointing to the tagged pointer `data`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796190,"byte_end":8796254,"line_start":615,"line_end":615,"column_start":5,"column_end":69}}]},{"kind":"Struct","id":{"krate":0,"index":160},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796545,"byte_end":8796550,"line_start":625,"line_end":625,"column_start":12,"column_end":17},"name":"Owned","qualname":"::atomic::Owned","value":"Owned {  }","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163}],"decl_id":null,"docs":" An owned heap-allocated object.","sig":null,"attributes":[{"value":"/ An owned heap-allocated object.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796305,"byte_end":8796340,"line_start":619,"line_end":619,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796341,"byte_end":8796344,"line_start":620,"line_end":620,"column_start":1,"column_end":4}},{"value":"/ This type is very similar to `Box<T>`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796345,"byte_end":8796387,"line_start":621,"line_end":621,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796388,"byte_end":8796391,"line_start":622,"line_end":622,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796392,"byte_end":8796490,"line_start":623,"line_end":623,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796491,"byte_end":8796533,"line_start":624,"line_end":624,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797396,"byte_end":8797399,"line_start":663,"line_end":663,"column_start":12,"column_end":15},"name":"new","qualname":"<Owned<T>>::new","value":"pub fn new(T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Allocates `value` on the heap and returns a new owned pointer pointing to it.","sig":null,"attributes":[{"value":"/ Allocates `value` on the heap and returns a new owned pointer pointing to it.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797166,"byte_end":8797247,"line_start":654,"line_end":654,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797252,"byte_end":8797255,"line_start":655,"line_end":655,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797260,"byte_end":8797274,"line_start":656,"line_end":656,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797279,"byte_end":8797282,"line_start":657,"line_end":657,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797287,"byte_end":8797294,"line_start":658,"line_end":658,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797299,"byte_end":8797330,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797335,"byte_end":8797338,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797343,"byte_end":8797372,"line_start":661,"line_end":661,"column_start":5,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797377,"byte_end":8797384,"line_start":662,"line_end":662,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798033,"byte_end":8798041,"line_start":684,"line_end":684,"column_start":19,"column_end":27},"name":"from_raw","qualname":"<Owned<T>>::from_raw","value":"pub unsafe fn from_raw(*mut T) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new owned pointer pointing to `raw`.","sig":null,"attributes":[{"value":"/ Returns a new owned pointer pointing to `raw`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797471,"byte_end":8797521,"line_start":667,"line_end":667,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797526,"byte_end":8797529,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ This function is unsafe because improper use may lead to memory problems. Argument `raw`","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797534,"byte_end":8797626,"line_start":669,"line_end":669,"column_start":5,"column_end":97}},{"value":"/ must be a valid pointer. Also, a double-free may occur if the function is called twice on","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797631,"byte_end":8797724,"line_start":670,"line_end":670,"column_start":5,"column_end":98}},{"value":"/ the same raw pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797729,"byte_end":8797754,"line_start":671,"line_end":671,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797759,"byte_end":8797762,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797767,"byte_end":8797779,"line_start":673,"line_end":673,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797784,"byte_end":8797787,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ Panics if `raw` is not properly aligned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797792,"byte_end":8797836,"line_start":675,"line_end":675,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797841,"byte_end":8797844,"line_start":676,"line_end":676,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797849,"byte_end":8797863,"line_start":677,"line_end":677,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797868,"byte_end":8797871,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797876,"byte_end":8797883,"line_start":679,"line_end":679,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797888,"byte_end":8797919,"line_start":680,"line_end":680,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797924,"byte_end":8797927,"line_start":681,"line_end":681,"column_start":5,"column_end":8}},{"value":"/ let o = unsafe { Owned::from_raw(Box::into_raw(Box::new(1234))) };","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797932,"byte_end":8798002,"line_start":682,"line_end":682,"column_start":5,"column_end":75}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798007,"byte_end":8798014,"line_start":683,"line_end":683,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798483,"byte_end":8798494,"line_start":702,"line_end":702,"column_start":12,"column_end":23},"name":"into_shared","qualname":"<Owned<T>>::into_shared","value":"pub fn into_shared<'g>(Self, &'g Guard) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a [`Shared`].","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a [`Shared`].","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798148,"byte_end":8798197,"line_start":689,"line_end":689,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798202,"byte_end":8798205,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798210,"byte_end":8798224,"line_start":691,"line_end":691,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798229,"byte_end":8798232,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798237,"byte_end":8798244,"line_start":693,"line_end":693,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798249,"byte_end":8798297,"line_start":694,"line_end":694,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798302,"byte_end":8798305,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798310,"byte_end":8798339,"line_start":696,"line_end":696,"column_start":5,"column_end":34}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798344,"byte_end":8798374,"line_start":697,"line_end":697,"column_start":5,"column_end":35}},{"value":"/ let p = o.into_shared(guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798379,"byte_end":8798412,"line_start":698,"line_end":698,"column_start":5,"column_end":38}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798417,"byte_end":8798424,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798429,"byte_end":8798432,"line_start":700,"line_end":700,"column_start":5,"column_end":8}},{"value":"/ [`Shared`]: struct.Shared.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798437,"byte_end":8798471,"line_start":701,"line_end":701,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798886,"byte_end":8798894,"line_start":717,"line_end":717,"column_start":12,"column_end":20},"name":"into_box","qualname":"<Owned<T>>::into_box","value":"pub fn into_box(Self) -> Box<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the owned pointer into a `Box`.","sig":null,"attributes":[{"value":"/ Converts the owned pointer into a `Box`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798606,"byte_end":8798650,"line_start":706,"line_end":706,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798655,"byte_end":8798658,"line_start":707,"line_end":707,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798663,"byte_end":8798677,"line_start":708,"line_end":708,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798682,"byte_end":8798685,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798690,"byte_end":8798697,"line_start":710,"line_end":710,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798702,"byte_end":8798750,"line_start":711,"line_end":711,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798755,"byte_end":8798758,"line_start":712,"line_end":712,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798763,"byte_end":8798792,"line_start":713,"line_end":713,"column_start":5,"column_end":34}},{"value":"/ let b: Box<i32> = o.into_box();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798797,"byte_end":8798832,"line_start":714,"line_end":714,"column_start":5,"column_end":40}},{"value":"/ assert_eq!(*b, 1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798837,"byte_end":8798862,"line_start":715,"line_end":715,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8798867,"byte_end":8798874,"line_start":716,"line_end":716,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799252,"byte_end":8799255,"line_start":732,"line_end":732,"column_start":12,"column_end":15},"name":"tag","qualname":"<Owned<T>>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799044,"byte_end":8799090,"line_start":723,"line_end":723,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799095,"byte_end":8799098,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799103,"byte_end":8799117,"line_start":725,"line_end":725,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799122,"byte_end":8799125,"line_start":726,"line_end":726,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799130,"byte_end":8799137,"line_start":727,"line_end":727,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799142,"byte_end":8799173,"line_start":728,"line_end":728,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799178,"byte_end":8799181,"line_start":729,"line_end":729,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(Owned::new(1234).tag(), 0);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799186,"byte_end":8799228,"line_start":730,"line_end":730,"column_start":5,"column_end":47}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799233,"byte_end":8799240,"line_start":731,"line_end":731,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799729,"byte_end":8799737,"line_start":750,"line_end":750,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Owned<T>>::with_tag","value":"pub fn with_tag(Self, usize) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799352,"byte_end":8799442,"line_start":737,"line_end":737,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799447,"byte_end":8799485,"line_start":738,"line_end":738,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799490,"byte_end":8799493,"line_start":739,"line_end":739,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799498,"byte_end":8799512,"line_start":740,"line_end":740,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799517,"byte_end":8799520,"line_start":741,"line_end":741,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799525,"byte_end":8799532,"line_start":742,"line_end":742,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Owned;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799537,"byte_end":8799568,"line_start":743,"line_end":743,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799573,"byte_end":8799576,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(0u64);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799581,"byte_end":8799610,"line_start":745,"line_end":745,"column_start":5,"column_end":34}},{"value":"/ assert_eq!(o.tag(), 0);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799615,"byte_end":8799642,"line_start":746,"line_end":746,"column_start":5,"column_end":32}},{"value":"/ let o = o.with_tag(2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799647,"byte_end":8799673,"line_start":747,"line_end":747,"column_start":5,"column_end":31}},{"value":"/ assert_eq!(o.tag(), 2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799678,"byte_end":8799705,"line_start":748,"line_end":748,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799710,"byte_end":8799717,"line_start":749,"line_end":749,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":211},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802017,"byte_end":8802023,"line_start":853,"line_end":853,"column_start":12,"column_end":18},"name":"Shared","qualname":"::atomic::Shared","value":"Shared {  }","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":215}],"decl_id":null,"docs":" A pointer to an object protected by the epoch GC.","sig":null,"attributes":[{"value":"/ A pointer to an object protected by the epoch GC.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801738,"byte_end":8801791,"line_start":847,"line_end":847,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801792,"byte_end":8801795,"line_start":848,"line_end":848,"column_start":1,"column_end":4}},{"value":"/ The pointer is valid for use only during the lifetime `'g`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801796,"byte_end":8801859,"line_start":849,"line_end":849,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801860,"byte_end":8801863,"line_start":850,"line_end":850,"column_start":1,"column_end":4}},{"value":"/ The pointer must be properly aligned. Since it is aligned, a tag can be stored into the unused","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801864,"byte_end":8801962,"line_start":851,"line_end":851,"column_start":1,"column_end":99}},{"value":"/ least significant bits of the address.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801963,"byte_end":8802005,"line_start":852,"line_end":852,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802830,"byte_end":8802834,"line_start":895,"line_end":895,"column_start":12,"column_end":16},"name":"null","qualname":"<Shared>::null","value":"pub fn null() -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns a new null pointer.","sig":null,"attributes":[{"value":"/ Returns a new null pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802614,"byte_end":8802645,"line_start":885,"line_end":885,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802650,"byte_end":8802653,"line_start":886,"line_end":886,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802658,"byte_end":8802672,"line_start":887,"line_end":887,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802677,"byte_end":8802680,"line_start":888,"line_end":888,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802685,"byte_end":8802692,"line_start":889,"line_end":889,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::Shared;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802697,"byte_end":8802729,"line_start":890,"line_end":890,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802734,"byte_end":8802737,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let p = Shared::<i32>::null();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802742,"byte_end":8802776,"line_start":892,"line_end":892,"column_start":5,"column_end":39}},{"value":"/ assert!(p.is_null());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802781,"byte_end":8802806,"line_start":893,"line_end":893,"column_start":5,"column_end":30}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802811,"byte_end":8802818,"line_start":894,"line_end":894,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":232},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803391,"byte_end":8803398,"line_start":916,"line_end":916,"column_start":12,"column_end":19},"name":"is_null","qualname":"<Shared>::is_null","value":"pub fn is_null(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the pointer is null.","sig":null,"attributes":[{"value":"/ Returns `true` if the pointer is null.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802949,"byte_end":8802991,"line_start":902,"line_end":902,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802996,"byte_end":8802999,"line_start":903,"line_end":903,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803004,"byte_end":8803018,"line_start":904,"line_end":904,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803023,"byte_end":8803026,"line_start":905,"line_end":905,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803031,"byte_end":8803038,"line_start":906,"line_end":906,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803043,"byte_end":8803099,"line_start":907,"line_end":907,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803104,"byte_end":8803148,"line_start":908,"line_end":908,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803153,"byte_end":8803156,"line_start":909,"line_end":909,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::null();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803161,"byte_end":8803188,"line_start":910,"line_end":910,"column_start":5,"column_end":32}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803193,"byte_end":8803223,"line_start":911,"line_end":911,"column_start":5,"column_end":35}},{"value":"/ assert!(a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803228,"byte_end":8803273,"line_start":912,"line_end":912,"column_start":5,"column_end":50}},{"value":"/ a.store(Owned::new(1234), SeqCst);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803278,"byte_end":8803316,"line_start":913,"line_end":913,"column_start":5,"column_end":43}},{"value":"/ assert!(!a.load(SeqCst, guard).is_null());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803321,"byte_end":8803367,"line_start":914,"line_end":914,"column_start":5,"column_end":51}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803372,"byte_end":8803379,"line_start":915,"line_end":915,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803929,"byte_end":8803935,"line_start":936,"line_end":936,"column_start":12,"column_end":18},"name":"as_raw","qualname":"<Shared>::as_raw","value":"pub fn as_raw(&Self) -> *const T","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a raw pointer (without the tag).","sig":null,"attributes":[{"value":"/ Converts the pointer to a raw pointer (without the tag).","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803459,"byte_end":8803519,"line_start":920,"line_end":920,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803524,"byte_end":8803527,"line_start":921,"line_end":921,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803532,"byte_end":8803546,"line_start":922,"line_end":922,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803551,"byte_end":8803554,"line_start":923,"line_end":923,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803559,"byte_end":8803566,"line_start":924,"line_end":924,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803571,"byte_end":8803627,"line_start":925,"line_end":925,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803632,"byte_end":8803676,"line_start":926,"line_end":926,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803681,"byte_end":8803684,"line_start":927,"line_end":927,"column_start":5,"column_end":8}},{"value":"/ let o = Owned::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803689,"byte_end":8803718,"line_start":928,"line_end":928,"column_start":5,"column_end":34}},{"value":"/ let raw = &*o as *const _;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803723,"byte_end":8803753,"line_start":929,"line_end":929,"column_start":5,"column_end":35}},{"value":"/ let a = Atomic::from(o);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803758,"byte_end":8803786,"line_start":930,"line_end":930,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803791,"byte_end":8803794,"line_start":931,"line_end":931,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803799,"byte_end":8803829,"line_start":932,"line_end":932,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803834,"byte_end":8803868,"line_start":933,"line_end":933,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.as_raw(), raw);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803873,"byte_end":8803905,"line_start":934,"line_end":934,"column_start":5,"column_end":37}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8803910,"byte_end":8803917,"line_start":935,"line_end":935,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":234},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805214,"byte_end":8805219,"line_start":972,"line_end":972,"column_start":19,"column_end":24},"name":"deref","qualname":"<Shared>::deref","value":"pub unsafe fn deref(&Self) -> &'g T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804035,"byte_end":8804064,"line_start":941,"line_end":941,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804069,"byte_end":8804072,"line_start":942,"line_end":942,"column_start":5,"column_end":8}},{"value":"/ Returns a reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804077,"byte_end":8804155,"line_start":943,"line_end":943,"column_start":5,"column_end":83}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804160,"byte_end":8804163,"line_start":944,"line_end":944,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804168,"byte_end":8804180,"line_start":945,"line_end":945,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804185,"byte_end":8804188,"line_start":946,"line_end":946,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804193,"byte_end":8804278,"line_start":947,"line_end":947,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804283,"byte_end":8804286,"line_start":948,"line_end":948,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804291,"byte_end":8804381,"line_start":949,"line_end":949,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804386,"byte_end":8804435,"line_start":950,"line_end":950,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804440,"byte_end":8804443,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804448,"byte_end":8804520,"line_start":952,"line_end":952,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804525,"byte_end":8804600,"line_start":953,"line_end":953,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804605,"byte_end":8804608,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804613,"byte_end":8804706,"line_start":955,"line_end":955,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804711,"byte_end":8804804,"line_start":956,"line_end":956,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804809,"byte_end":8804847,"line_start":957,"line_end":957,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804852,"byte_end":8804855,"line_start":958,"line_end":958,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804860,"byte_end":8804874,"line_start":959,"line_end":959,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804879,"byte_end":8804882,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804887,"byte_end":8804894,"line_start":961,"line_end":961,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804899,"byte_end":8804948,"line_start":962,"line_end":962,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8804953,"byte_end":8804997,"line_start":963,"line_end":963,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805002,"byte_end":8805005,"line_start":964,"line_end":964,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805010,"byte_end":8805040,"line_start":965,"line_end":965,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805045,"byte_end":8805075,"line_start":966,"line_end":966,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805080,"byte_end":8805114,"line_start":967,"line_end":967,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805119,"byte_end":8805131,"line_start":968,"line_end":968,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805136,"byte_end":8805173,"line_start":969,"line_end":969,"column_start":5,"column_end":42}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805178,"byte_end":8805183,"line_start":970,"line_end":970,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805188,"byte_end":8805195,"line_start":971,"line_end":971,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806433,"byte_end":8806442,"line_start":1012,"line_end":1012,"column_start":19,"column_end":28},"name":"deref_mut","qualname":"<Shared>::deref_mut","value":"pub unsafe fn deref_mut(&mut Self) -> &'g mut T","parent":null,"children":[],"decl_id":null,"docs":" Dereferences the pointer.","sig":null,"attributes":[{"value":"/ Dereferences the pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805273,"byte_end":8805302,"line_start":976,"line_end":976,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805307,"byte_end":8805310,"line_start":977,"line_end":977,"column_start":5,"column_end":8}},{"value":"/ Returns a mutable reference to the pointee that is valid during the lifetime `'g`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805315,"byte_end":8805401,"line_start":978,"line_end":978,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805406,"byte_end":8805409,"line_start":979,"line_end":979,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805414,"byte_end":8805426,"line_start":980,"line_end":980,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805431,"byte_end":8805434,"line_start":981,"line_end":981,"column_start":5,"column_end":8}},{"value":"/ * There is no guarantee that there are no more threads attempting to read/write from/to the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805439,"byte_end":8805534,"line_start":982,"line_end":982,"column_start":5,"column_end":100}},{"value":"/   actual object at the same time.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805539,"byte_end":8805576,"line_start":983,"line_end":983,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805581,"byte_end":8805584,"line_start":984,"line_end":984,"column_start":5,"column_end":8}},{"value":"/   The user must know that there are no concurrent accesses towards the object itself.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805589,"byte_end":8805678,"line_start":985,"line_end":985,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805683,"byte_end":8805686,"line_start":986,"line_end":986,"column_start":5,"column_end":8}},{"value":"/ * Other than the above, all safety concerns of `deref()` applies here.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805691,"byte_end":8805765,"line_start":987,"line_end":987,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805770,"byte_end":8805773,"line_start":988,"line_end":988,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805778,"byte_end":8805792,"line_start":989,"line_end":989,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805797,"byte_end":8805800,"line_start":990,"line_end":990,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805805,"byte_end":8805812,"line_start":991,"line_end":991,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805817,"byte_end":8805866,"line_start":992,"line_end":992,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805871,"byte_end":8805915,"line_start":993,"line_end":993,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805920,"byte_end":8805923,"line_start":994,"line_end":994,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805928,"byte_end":8805970,"line_start":995,"line_end":995,"column_start":5,"column_end":47}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8805975,"byte_end":8806005,"line_start":996,"line_end":996,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806010,"byte_end":8806013,"line_start":997,"line_end":997,"column_start":5,"column_end":8}},{"value":"/ let mut p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806018,"byte_end":8806056,"line_start":998,"line_end":998,"column_start":5,"column_end":43}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806061,"byte_end":8806073,"line_start":999,"line_end":999,"column_start":5,"column_end":17}},{"value":"/     assert!(!p.is_null());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806078,"byte_end":8806108,"line_start":1000,"line_end":1000,"column_start":5,"column_end":35}},{"value":"/     let b = p.deref_mut();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806113,"byte_end":8806143,"line_start":1001,"line_end":1001,"column_start":5,"column_end":35}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806148,"byte_end":8806189,"line_start":1002,"line_end":1002,"column_start":5,"column_end":46}},{"value":"/     b.push(5);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806194,"byte_end":8806212,"line_start":1003,"line_end":1003,"column_start":5,"column_end":23}},{"value":"/     assert_eq!(b, &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806217,"byte_end":8806261,"line_start":1004,"line_end":1004,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806266,"byte_end":8806271,"line_start":1005,"line_end":1005,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806276,"byte_end":8806279,"line_start":1006,"line_end":1006,"column_start":5,"column_end":8}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806284,"byte_end":8806318,"line_start":1007,"line_end":1007,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806323,"byte_end":8806335,"line_start":1008,"line_end":1008,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.deref(), &vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806340,"byte_end":8806392,"line_start":1009,"line_end":1009,"column_start":5,"column_end":57}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806397,"byte_end":8806402,"line_start":1010,"line_end":1010,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806407,"byte_end":8806414,"line_start":1011,"line_end":1011,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":236},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807734,"byte_end":8807740,"line_start":1047,"line_end":1047,"column_start":19,"column_end":25},"name":"as_ref","qualname":"<Shared>::as_ref","value":"pub unsafe fn as_ref(&Self) -> Option<&'g T>","parent":null,"children":[],"decl_id":null,"docs":" Converts the pointer to a reference.","sig":null,"attributes":[{"value":"/ Converts the pointer to a reference.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806520,"byte_end":8806560,"line_start":1016,"line_end":1016,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806565,"byte_end":8806568,"line_start":1017,"line_end":1017,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the pointer is null, or else a reference to the object wrapped in `Some`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806573,"byte_end":8806668,"line_start":1018,"line_end":1018,"column_start":5,"column_end":100}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806673,"byte_end":8806676,"line_start":1019,"line_end":1019,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806681,"byte_end":8806693,"line_start":1020,"line_end":1020,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806698,"byte_end":8806701,"line_start":1021,"line_end":1021,"column_start":5,"column_end":8}},{"value":"/ Dereferencing a pointer is unsafe because it could be pointing to invalid memory.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806706,"byte_end":8806791,"line_start":1022,"line_end":1022,"column_start":5,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806796,"byte_end":8806799,"line_start":1023,"line_end":1023,"column_start":5,"column_end":8}},{"value":"/ Another concern is the possiblity of data races due to lack of proper synchronization.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806804,"byte_end":8806894,"line_start":1024,"line_end":1024,"column_start":5,"column_end":95}},{"value":"/ For example, consider the following scenario:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806899,"byte_end":8806948,"line_start":1025,"line_end":1025,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806953,"byte_end":8806956,"line_start":1026,"line_end":1026,"column_start":5,"column_end":8}},{"value":"/ 1. A thread creates a new object: `a.store(Owned::new(10), Relaxed)`","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8806961,"byte_end":8807033,"line_start":1027,"line_end":1027,"column_start":5,"column_end":77}},{"value":"/ 2. Another thread reads it: `*a.load(Relaxed, guard).as_ref().unwrap()`","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807038,"byte_end":8807113,"line_start":1028,"line_end":1028,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807118,"byte_end":8807121,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The problem is that relaxed orderings don't synchronize initialization of the object with","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807126,"byte_end":8807219,"line_start":1030,"line_end":1030,"column_start":5,"column_end":98}},{"value":"/ the read from the second thread. This is a data race. A possible solution would be to use","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807224,"byte_end":8807317,"line_start":1031,"line_end":1031,"column_start":5,"column_end":98}},{"value":"/ `Release` and `Acquire` orderings.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807322,"byte_end":8807360,"line_start":1032,"line_end":1032,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807365,"byte_end":8807368,"line_start":1033,"line_end":1033,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807373,"byte_end":8807387,"line_start":1034,"line_end":1034,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807392,"byte_end":8807395,"line_start":1035,"line_end":1035,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807400,"byte_end":8807407,"line_start":1036,"line_end":1036,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807412,"byte_end":8807461,"line_start":1037,"line_end":1037,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807466,"byte_end":8807510,"line_start":1038,"line_end":1038,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807515,"byte_end":8807518,"line_start":1039,"line_end":1039,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807523,"byte_end":8807553,"line_start":1040,"line_end":1040,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807558,"byte_end":8807588,"line_start":1041,"line_end":1041,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807593,"byte_end":8807627,"line_start":1042,"line_end":1042,"column_start":5,"column_end":39}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807632,"byte_end":8807644,"line_start":1043,"line_end":1043,"column_start":5,"column_end":17}},{"value":"/     assert_eq!(p.as_ref(), Some(&1234));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807649,"byte_end":8807693,"line_start":1044,"line_end":1044,"column_start":5,"column_end":49}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807698,"byte_end":8807703,"line_start":1045,"line_end":1045,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807708,"byte_end":8807715,"line_start":1046,"line_end":1046,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808479,"byte_end":8808489,"line_start":1075,"line_end":1075,"column_start":19,"column_end":29},"name":"into_owned","qualname":"<Shared>::into_owned","value":"pub unsafe fn into_owned(Self) -> Owned<T>","parent":null,"children":[],"decl_id":null,"docs":" Takes ownership of the pointee.","sig":null,"attributes":[{"value":"/ Takes ownership of the pointee.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807809,"byte_end":8807844,"line_start":1051,"line_end":1051,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807849,"byte_end":8807852,"line_start":1052,"line_end":1052,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807857,"byte_end":8807869,"line_start":1053,"line_end":1053,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807874,"byte_end":8807877,"line_start":1054,"line_end":1054,"column_start":5,"column_end":8}},{"value":"/ Panics if this pointer is null, but only in debug mode.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807882,"byte_end":8807941,"line_start":1055,"line_end":1055,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807946,"byte_end":8807949,"line_start":1056,"line_end":1056,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807954,"byte_end":8807966,"line_start":1057,"line_end":1057,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807971,"byte_end":8807974,"line_start":1058,"line_end":1058,"column_start":5,"column_end":8}},{"value":"/ This method may be called only if the pointer is valid and nobody else is holding a","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8807979,"byte_end":8808066,"line_start":1059,"line_end":1059,"column_start":5,"column_end":92}},{"value":"/ reference to the same object.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808071,"byte_end":8808104,"line_start":1060,"line_end":1060,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808109,"byte_end":8808112,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808117,"byte_end":8808131,"line_start":1062,"line_end":1062,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808136,"byte_end":8808139,"line_start":1063,"line_end":1063,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808144,"byte_end":8808151,"line_start":1064,"line_end":1064,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808156,"byte_end":8808205,"line_start":1065,"line_end":1065,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808210,"byte_end":8808254,"line_start":1066,"line_end":1066,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808259,"byte_end":8808262,"line_start":1067,"line_end":1067,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(1234);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808267,"byte_end":8808297,"line_start":1068,"line_end":1068,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808302,"byte_end":8808314,"line_start":1069,"line_end":1069,"column_start":5,"column_end":17}},{"value":"/     let guard = &epoch::unprotected();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808319,"byte_end":8808361,"line_start":1070,"line_end":1070,"column_start":5,"column_end":47}},{"value":"/     let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808366,"byte_end":8808404,"line_start":1071,"line_end":1071,"column_start":5,"column_end":43}},{"value":"/     drop(p.into_owned());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808409,"byte_end":8808438,"line_start":1072,"line_end":1072,"column_start":5,"column_end":34}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808443,"byte_end":8808448,"line_start":1073,"line_end":1073,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808453,"byte_end":8808460,"line_start":1074,"line_end":1074,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809096,"byte_end":8809099,"line_start":1096,"line_end":1096,"column_start":12,"column_end":15},"name":"tag","qualname":"<Shared>::tag","value":"pub fn tag(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the tag stored within the pointer.","sig":null,"attributes":[{"value":"/ Returns the tag stored within the pointer.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808688,"byte_end":8808734,"line_start":1083,"line_end":1083,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808739,"byte_end":8808742,"line_start":1084,"line_end":1084,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808747,"byte_end":8808761,"line_start":1085,"line_end":1085,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808766,"byte_end":8808769,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808774,"byte_end":8808781,"line_start":1087,"line_end":1087,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808786,"byte_end":8808842,"line_start":1088,"line_end":1088,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808847,"byte_end":8808891,"line_start":1089,"line_end":1089,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808896,"byte_end":8808899,"line_start":1090,"line_end":1090,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::<u64>::from(Owned::new(0u64).with_tag(2));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808904,"byte_end":8808966,"line_start":1091,"line_end":1091,"column_start":5,"column_end":67}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8808971,"byte_end":8809001,"line_start":1092,"line_end":1092,"column_start":5,"column_end":35}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809006,"byte_end":8809040,"line_start":1093,"line_end":1093,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(p.tag(), 2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809045,"byte_end":8809072,"line_start":1094,"line_end":1094,"column_start":5,"column_end":32}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809077,"byte_end":8809084,"line_start":1095,"line_end":1095,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":239},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809774,"byte_end":8809782,"line_start":1119,"line_end":1119,"column_start":12,"column_end":20},"name":"with_tag","qualname":"<Shared>::with_tag","value":"pub fn with_tag(&Self, usize) -> Shared","parent":null,"children":[],"decl_id":null,"docs":" Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the\n unused bits of the pointer to `T`.","sig":null,"attributes":[{"value":"/ Returns the same pointer, but tagged with `tag`. `tag` is truncated to be fit into the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809196,"byte_end":8809286,"line_start":1101,"line_end":1101,"column_start":5,"column_end":95}},{"value":"/ unused bits of the pointer to `T`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809291,"byte_end":8809329,"line_start":1102,"line_end":1102,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809334,"byte_end":8809337,"line_start":1103,"line_end":1103,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809342,"byte_end":8809356,"line_start":1104,"line_end":1104,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809361,"byte_end":8809364,"line_start":1105,"line_end":1105,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809369,"byte_end":8809376,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809381,"byte_end":8809430,"line_start":1107,"line_end":1107,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809435,"byte_end":8809479,"line_start":1108,"line_end":1108,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809484,"byte_end":8809487,"line_start":1109,"line_end":1109,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(0u64);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809492,"byte_end":8809522,"line_start":1110,"line_end":1110,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809527,"byte_end":8809557,"line_start":1111,"line_end":1111,"column_start":5,"column_end":35}},{"value":"/ let p1 = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809562,"byte_end":8809597,"line_start":1112,"line_end":1112,"column_start":5,"column_end":40}},{"value":"/ let p2 = p1.with_tag(2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809602,"byte_end":8809630,"line_start":1113,"line_end":1113,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809635,"byte_end":8809638,"line_start":1114,"line_end":1114,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(p1.tag(), 0);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809643,"byte_end":8809671,"line_start":1115,"line_end":1115,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p2.tag(), 2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809676,"byte_end":8809704,"line_start":1116,"line_end":1116,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(p1.as_raw(), p2.as_raw());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809709,"byte_end":8809750,"line_start":1117,"line_end":1117,"column_start":5,"column_end":46}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809755,"byte_end":8809762,"line_start":1118,"line_end":1118,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812110,"byte_end":8812119,"line_start":22,"line_end":22,"column_start":12,"column_end":21},"name":"Collector","qualname":"::collector::Collector","value":"Collector {  }","parent":null,"children":[{"krate":0,"index":289}],"decl_id":null,"docs":" An epoch-based garbage collector.\n","sig":null,"attributes":[{"value":"/ An epoch-based garbage collector.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812061,"byte_end":8812098,"line_start":21,"line_end":21,"column_start":1,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":293},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812291,"byte_end":8812294,"line_start":31,"line_end":31,"column_start":12,"column_end":15},"name":"new","qualname":"<Collector>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new collector.\n","sig":null,"attributes":[{"value":"/ Creates a new collector.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812251,"byte_end":8812279,"line_start":30,"line_end":30,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812450,"byte_end":8812458,"line_start":38,"line_end":38,"column_start":12,"column_end":20},"name":"register","qualname":"<Collector>::register","value":"pub fn register(&Self) -> LocalHandle","parent":null,"children":[],"decl_id":null,"docs":" Registers a new handle for the collector.\n","sig":null,"attributes":[{"value":"/ Registers a new handle for the collector.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812393,"byte_end":8812438,"line_start":37,"line_end":37,"column_start":5,"column_end":50}}]},{"kind":"Struct","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813122,"byte_end":8813133,"line_start":67,"line_end":67,"column_start":12,"column_end":23},"name":"LocalHandle","qualname":"::collector::LocalHandle","value":"LocalHandle {  }","parent":null,"children":[{"krate":0,"index":303}],"decl_id":null,"docs":" A handle to a garbage collector.\n","sig":null,"attributes":[{"value":"/ A handle to a garbage collector.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813074,"byte_end":8813110,"line_start":66,"line_end":66,"column_start":1,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813244,"byte_end":8813247,"line_start":74,"line_end":74,"column_start":12,"column_end":15},"name":"pin","qualname":"<LocalHandle>::pin","value":"pub fn pin(&Self) -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the handle.\n","sig":null,"attributes":[{"value":"/ Pins the handle.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813198,"byte_end":8813218,"line_start":72,"line_end":72,"column_start":5,"column_end":25}},{"value":"inline","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813223,"byte_end":8813232,"line_start":73,"line_end":73,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813385,"byte_end":8813394,"line_start":80,"line_end":80,"column_start":12,"column_end":21},"name":"is_pinned","qualname":"<LocalHandle>::is_pinned","value":"pub fn is_pinned(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the handle is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the handle is pinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813316,"byte_end":8813359,"line_start":78,"line_end":78,"column_start":5,"column_end":48}},{"value":"inline","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813364,"byte_end":8813373,"line_start":79,"line_end":79,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813550,"byte_end":8813559,"line_start":86,"line_end":86,"column_start":12,"column_end":21},"name":"collector","qualname":"<LocalHandle>::collector","value":"pub fn collector(&Self) -> &Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this handle.\n","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this handle.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813468,"byte_end":8813524,"line_start":84,"line_end":84,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813529,"byte_end":8813538,"line_start":85,"line_end":85,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":387},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832181,"byte_end":8832186,"line_start":68,"line_end":68,"column_start":12,"column_end":17},"name":"Guard","qualname":"::guard::Guard","value":"Guard {  }","parent":null,"children":[{"krate":0,"index":388}],"decl_id":null,"docs":" A guard that keeps the current thread pinned.","sig":null,"attributes":[{"value":"/ A guard that keeps the current thread pinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830457,"byte_end":8830506,"line_start":9,"line_end":9,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830507,"byte_end":8830510,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ # Pinning","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830511,"byte_end":8830524,"line_start":11,"line_end":11,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830525,"byte_end":8830528,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The current thread is pinned by calling [`pin`], which returns a new guard:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830529,"byte_end":8830608,"line_start":13,"line_end":13,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830609,"byte_end":8830612,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830613,"byte_end":8830620,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830621,"byte_end":8830654,"line_start":16,"line_end":16,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830655,"byte_end":8830658,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ // It is often convenient to prefix a call to `pin` with a `&` in order to create a reference.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830659,"byte_end":8830757,"line_start":18,"line_end":18,"column_start":1,"column_end":99}},{"value":"/ // This is not really necessary, but makes passing references to the guard a bit easier.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830758,"byte_end":8830850,"line_start":19,"line_end":19,"column_start":1,"column_end":93}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830851,"byte_end":8830881,"line_start":20,"line_end":20,"column_start":1,"column_end":31}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830882,"byte_end":8830889,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830890,"byte_end":8830893,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ When a guard gets dropped, the current thread is automatically unpinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830894,"byte_end":8830970,"line_start":23,"line_end":23,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830971,"byte_end":8830974,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Pointers on the stack","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8830975,"byte_end":8831002,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831003,"byte_end":8831006,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Having a guard allows us to create pointers on the stack to heap-allocated objects.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831007,"byte_end":8831094,"line_start":27,"line_end":27,"column_start":1,"column_end":88}},{"value":"/ For example:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831095,"byte_end":8831111,"line_start":28,"line_end":28,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831112,"byte_end":8831115,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831116,"byte_end":8831123,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831124,"byte_end":8831180,"line_start":31,"line_end":31,"column_start":1,"column_end":57}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831181,"byte_end":8831225,"line_start":32,"line_end":32,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831226,"byte_end":8831229,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ // Create a heap-allocated number.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831230,"byte_end":8831268,"line_start":34,"line_end":34,"column_start":1,"column_end":39}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831269,"byte_end":8831298,"line_start":35,"line_end":35,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831299,"byte_end":8831302,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831303,"byte_end":8831333,"line_start":37,"line_end":37,"column_start":1,"column_end":31}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831334,"byte_end":8831364,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831365,"byte_end":8831368,"line_start":39,"line_end":39,"column_start":1,"column_end":4}},{"value":"/ // Load the heap-allocated object and create pointer `p` on the stack.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831369,"byte_end":8831443,"line_start":40,"line_end":40,"column_start":1,"column_end":75}},{"value":"/ let p = a.load(SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831444,"byte_end":8831478,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831479,"byte_end":8831482,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ // Dereference the pointer and print the value:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831483,"byte_end":8831534,"line_start":43,"line_end":43,"column_start":1,"column_end":52}},{"value":"/ if let Some(num) = unsafe { p.as_ref() } {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831535,"byte_end":8831581,"line_start":44,"line_end":44,"column_start":1,"column_end":47}},{"value":"/     println!(\"The number is {}.\", num);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831582,"byte_end":8831625,"line_start":45,"line_end":45,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831626,"byte_end":8831631,"line_start":46,"line_end":46,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831632,"byte_end":8831639,"line_start":47,"line_end":47,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831640,"byte_end":8831643,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ # Multiple guards","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831644,"byte_end":8831665,"line_start":49,"line_end":49,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831666,"byte_end":8831669,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"/ Pinning is reentrant and it is perfectly legal to create multiple guards. In that case, the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831670,"byte_end":8831765,"line_start":51,"line_end":51,"column_start":1,"column_end":96}},{"value":"/ thread will actually be pinned only when the first guard is created and unpinned when the last","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831766,"byte_end":8831864,"line_start":52,"line_end":52,"column_start":1,"column_end":99}},{"value":"/ one is dropped:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831865,"byte_end":8831884,"line_start":53,"line_end":53,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831885,"byte_end":8831888,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831889,"byte_end":8831896,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831897,"byte_end":8831930,"line_start":56,"line_end":56,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831931,"byte_end":8831934,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ let guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831935,"byte_end":8831965,"line_start":58,"line_end":58,"column_start":1,"column_end":31}},{"value":"/ let guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831966,"byte_end":8831996,"line_start":59,"line_end":59,"column_start":1,"column_end":31}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8831997,"byte_end":8832029,"line_start":60,"line_end":60,"column_start":1,"column_end":33}},{"value":"/ drop(guard1);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832030,"byte_end":8832047,"line_start":61,"line_end":61,"column_start":1,"column_end":18}},{"value":"/ assert!(epoch::is_pinned());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832048,"byte_end":8832080,"line_start":62,"line_end":62,"column_start":1,"column_end":33}},{"value":"/ drop(guard2);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832081,"byte_end":8832098,"line_start":63,"line_end":63,"column_start":1,"column_end":18}},{"value":"/ assert!(!epoch::is_pinned());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832099,"byte_end":8832132,"line_start":64,"line_end":64,"column_start":1,"column_end":34}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832133,"byte_end":8832140,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832141,"byte_end":8832144,"line_start":66,"line_end":66,"column_start":1,"column_end":4}},{"value":"/ [`pin`]: fn.pin.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832145,"byte_end":8832169,"line_start":67,"line_end":67,"column_start":1,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833214,"byte_end":8833219,"line_start":90,"line_end":90,"column_start":12,"column_end":17},"name":"defer","qualname":"<Guard>::defer","value":"pub fn defer<F, R>(&Self, F) where F: FnOnce() -> R, F: Send + 'static","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832245,"byte_end":8832334,"line_start":73,"line_end":73,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832339,"byte_end":8832364,"line_start":74,"line_end":74,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832369,"byte_end":8832372,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832377,"byte_end":8832470,"line_start":76,"line_end":76,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832475,"byte_end":8832563,"line_start":77,"line_end":77,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832568,"byte_end":8832658,"line_start":78,"line_end":78,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832663,"byte_end":8832703,"line_start":79,"line_end":79,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832708,"byte_end":8832711,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832716,"byte_end":8832806,"line_start":81,"line_end":81,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832811,"byte_end":8832902,"line_start":82,"line_end":82,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832907,"byte_end":8832994,"line_start":83,"line_end":83,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832999,"byte_end":8833019,"line_start":84,"line_end":84,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833024,"byte_end":8833027,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833032,"byte_end":8833119,"line_start":86,"line_end":86,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833124,"byte_end":8833149,"line_start":87,"line_end":87,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833154,"byte_end":8833157,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833162,"byte_end":8833202,"line_start":89,"line_end":89,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837572,"byte_end":8837587,"line_start":190,"line_end":190,"column_start":19,"column_end":34},"name":"defer_unchecked","qualname":"<Guard>::defer_unchecked","value":"pub unsafe fn defer_unchecked<F, R>(&Self, F) where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Stores a function so that it can be executed at some point after all currently pinned\n threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a function so that it can be executed at some point after all currently pinned","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833383,"byte_end":8833472,"line_start":100,"line_end":100,"column_start":5,"column_end":94}},{"value":"/ threads get unpinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833477,"byte_end":8833502,"line_start":101,"line_end":101,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833507,"byte_end":8833510,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ This method first stores `f` into the thread-local (or handle-local) cache. If this cache","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833515,"byte_end":8833608,"line_start":103,"line_end":103,"column_start":5,"column_end":98}},{"value":"/ becomes full, some functions are moved into the global cache. At the same time, some","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833613,"byte_end":8833701,"line_start":104,"line_end":104,"column_start":5,"column_end":93}},{"value":"/ functions from both local and global caches may get executed in order to incrementally","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833706,"byte_end":8833796,"line_start":105,"line_end":105,"column_start":5,"column_end":95}},{"value":"/ clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833801,"byte_end":8833841,"line_start":106,"line_end":106,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833846,"byte_end":8833849,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly `f` will be executed. The only guarantee is that it","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833854,"byte_end":8833944,"line_start":108,"line_end":108,"column_start":5,"column_end":95}},{"value":"/ won't be executed until all currently pinned threads get unpinned. In theory, `f` might","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8833949,"byte_end":8834040,"line_start":109,"line_end":109,"column_start":5,"column_end":96}},{"value":"/ never run, but the epoch-based garbage collection will make an effort to execute it","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834045,"byte_end":8834132,"line_start":110,"line_end":110,"column_start":5,"column_end":92}},{"value":"/ reasonably soon.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834137,"byte_end":8834157,"line_start":111,"line_end":111,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834162,"byte_end":8834165,"line_start":112,"line_end":112,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the function will simply be","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834170,"byte_end":8834257,"line_start":113,"line_end":113,"column_start":5,"column_end":92}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834262,"byte_end":8834287,"line_start":114,"line_end":114,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834292,"byte_end":8834295,"line_start":115,"line_end":115,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834300,"byte_end":8834312,"line_start":116,"line_end":116,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834317,"byte_end":8834320,"line_start":117,"line_end":117,"column_start":5,"column_end":8}},{"value":"/ The given function must not hold reference onto the stack. It is highly recommended that","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834325,"byte_end":8834417,"line_start":118,"line_end":118,"column_start":5,"column_end":97}},{"value":"/ the passed function is **always** marked with `move` in order to prevent accidental","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834422,"byte_end":8834509,"line_start":119,"line_end":119,"column_start":5,"column_end":92}},{"value":"/ borrows.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834514,"byte_end":8834526,"line_start":120,"line_end":120,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834531,"byte_end":8834534,"line_start":121,"line_end":121,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834539,"byte_end":8834546,"line_start":122,"line_end":122,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834551,"byte_end":8834584,"line_start":123,"line_end":123,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834589,"byte_end":8834592,"line_start":124,"line_end":124,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834597,"byte_end":8834627,"line_start":125,"line_end":125,"column_start":5,"column_end":35}},{"value":"/ let message = \"Hello!\";","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834632,"byte_end":8834659,"line_start":126,"line_end":126,"column_start":5,"column_end":32}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834664,"byte_end":8834676,"line_start":127,"line_end":127,"column_start":5,"column_end":17}},{"value":"/     // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834681,"byte_end":8834756,"line_start":128,"line_end":128,"column_start":5,"column_end":80}},{"value":"/     guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834761,"byte_end":8834800,"line_start":129,"line_end":129,"column_start":5,"column_end":44}},{"value":"/         println!(\"{}\", message);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834805,"byte_end":8834841,"line_start":130,"line_end":130,"column_start":5,"column_end":41}},{"value":"/     });","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834846,"byte_end":8834857,"line_start":131,"line_end":131,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834862,"byte_end":8834867,"line_start":132,"line_end":132,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834872,"byte_end":8834879,"line_start":133,"line_end":133,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834884,"byte_end":8834887,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute `f`, so anything accessed by","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834892,"byte_end":8834986,"line_start":135,"line_end":135,"column_start":5,"column_end":99}},{"value":"/ the closure must be `Send`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8834991,"byte_end":8835022,"line_start":136,"line_end":136,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835027,"byte_end":8835030,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `F: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835035,"byte_end":8835130,"line_start":138,"line_end":138,"column_start":5,"column_end":100}},{"value":"/ `F: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835135,"byte_end":8835227,"line_start":139,"line_end":139,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835232,"byte_end":8835321,"line_start":140,"line_end":140,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835326,"byte_end":8835329,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835334,"byte_end":8835347,"line_start":142,"line_end":142,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835352,"byte_end":8835405,"line_start":143,"line_end":143,"column_start":5,"column_end":58}},{"value":"/ guard.defer_unchecked(move || shared.into_owned()); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835410,"byte_end":8835492,"line_start":144,"line_end":144,"column_start":5,"column_end":87}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835497,"byte_end":8835504,"line_start":145,"line_end":145,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835509,"byte_end":8835512,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the deferred function,","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835517,"byte_end":8835610,"line_start":147,"line_end":147,"column_start":5,"column_end":98}},{"value":"/ because it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835615,"byte_end":8835710,"line_start":148,"line_end":148,"column_start":5,"column_end":100}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835715,"byte_end":8835775,"line_start":149,"line_end":149,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835780,"byte_end":8835783,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835788,"byte_end":8835802,"line_start":151,"line_end":151,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835807,"byte_end":8835810,"line_start":152,"line_end":152,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835815,"byte_end":8835901,"line_start":153,"line_end":153,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8835906,"byte_end":8836000,"line_start":154,"line_end":154,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836005,"byte_end":8836101,"line_start":155,"line_end":155,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836106,"byte_end":8836198,"line_start":156,"line_end":156,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836203,"byte_end":8836259,"line_start":157,"line_end":157,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836264,"byte_end":8836267,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836272,"byte_end":8836279,"line_start":159,"line_end":159,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836284,"byte_end":8836340,"line_start":160,"line_end":160,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836345,"byte_end":8836389,"line_start":161,"line_end":161,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836394,"byte_end":8836397,"line_start":162,"line_end":162,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836402,"byte_end":8836433,"line_start":163,"line_end":163,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836438,"byte_end":8836441,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836446,"byte_end":8836523,"line_start":165,"line_end":165,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836528,"byte_end":8836559,"line_start":166,"line_end":166,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836564,"byte_end":8836567,"line_start":167,"line_end":167,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836572,"byte_end":8836602,"line_start":168,"line_end":168,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836607,"byte_end":8836637,"line_start":169,"line_end":169,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836642,"byte_end":8836645,"line_start":170,"line_end":170,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836650,"byte_end":8836727,"line_start":171,"line_end":171,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836732,"byte_end":8836804,"line_start":172,"line_end":172,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836809,"byte_end":8836812,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836817,"byte_end":8836838,"line_start":174,"line_end":174,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836843,"byte_end":8836903,"line_start":175,"line_end":175,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836908,"byte_end":8836990,"line_start":176,"line_end":176,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8836995,"byte_end":8837011,"line_start":177,"line_end":177,"column_start":5,"column_end":21}},{"value":"/         // ALWAYS use `move` when sending a closure into `defer_unchecked`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837016,"byte_end":8837095,"line_start":178,"line_end":178,"column_start":5,"column_end":84}},{"value":"/         guard.defer_unchecked(move || {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837100,"byte_end":8837143,"line_start":179,"line_end":179,"column_start":5,"column_end":48}},{"value":"/             println!(\"{} is now being deallocated.\", p.deref());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837148,"byte_end":8837216,"line_start":180,"line_end":180,"column_start":5,"column_end":73}},{"value":"/             // Now we have unique access to the object pointed to by `p` and can turn it","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837221,"byte_end":8837313,"line_start":181,"line_end":181,"column_start":5,"column_end":97}},{"value":"/             // into an `Owned`. Dropping the `Owned` will deallocate the object.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837318,"byte_end":8837402,"line_start":182,"line_end":182,"column_start":5,"column_end":89}},{"value":"/             drop(p.into_owned());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837407,"byte_end":8837444,"line_start":183,"line_end":183,"column_start":5,"column_end":42}},{"value":"/         });","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837449,"byte_end":8837464,"line_start":184,"line_end":184,"column_start":5,"column_end":20}},{"value":"/     }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837469,"byte_end":8837478,"line_start":185,"line_end":185,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837483,"byte_end":8837488,"line_start":186,"line_end":186,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837493,"byte_end":8837500,"line_start":187,"line_end":187,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837505,"byte_end":8837508,"line_start":188,"line_end":188,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837513,"byte_end":8837553,"line_start":189,"line_end":189,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841227,"byte_end":8841240,"line_start":271,"line_end":271,"column_start":19,"column_end":32},"name":"defer_destroy","qualname":"<Guard>::defer_destroy","value":"pub unsafe fn defer_destroy<T>(&Self, Shared<, T>)","parent":null,"children":[],"decl_id":null,"docs":" Stores a destructor for an object so that it can be deallocated and dropped at some point\n after all currently pinned threads get unpinned.","sig":null,"attributes":[{"value":"/ Stores a destructor for an object so that it can be deallocated and dropped at some point","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837826,"byte_end":8837919,"line_start":201,"line_end":201,"column_start":5,"column_end":98}},{"value":"/ after all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837924,"byte_end":8837976,"line_start":202,"line_end":202,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837981,"byte_end":8837984,"line_start":203,"line_end":203,"column_start":5,"column_end":8}},{"value":"/ This method first stores the destructor into the thread-local (or handle-local) cache. If","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8837989,"byte_end":8838082,"line_start":204,"line_end":204,"column_start":5,"column_end":98}},{"value":"/ this cache becomes full, some destructors are moved into the global cache. At the same","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838087,"byte_end":8838177,"line_start":205,"line_end":205,"column_start":5,"column_end":95}},{"value":"/ time, some destructors from both local and global caches may get executed in order to","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838182,"byte_end":8838271,"line_start":206,"line_end":206,"column_start":5,"column_end":94}},{"value":"/ incrementally clean up the caches as they fill up.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838276,"byte_end":8838330,"line_start":207,"line_end":207,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838335,"byte_end":8838338,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ There is no guarantee when exactly the destructor will be executed. The only guarantee is","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838343,"byte_end":8838436,"line_start":209,"line_end":209,"column_start":5,"column_end":98}},{"value":"/ that it won't be executed until all currently pinned threads get unpinned. In theory, the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838441,"byte_end":8838534,"line_start":210,"line_end":210,"column_start":5,"column_end":98}},{"value":"/ destructor might never run, but the epoch-based garbage collection will make an effort to","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838539,"byte_end":8838632,"line_start":211,"line_end":211,"column_start":5,"column_end":98}},{"value":"/ execute it reasonably soon.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838637,"byte_end":8838668,"line_start":212,"line_end":212,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838673,"byte_end":8838676,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, the destructor will simply be","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838681,"byte_end":8838770,"line_start":214,"line_end":214,"column_start":5,"column_end":94}},{"value":"/ executed immediately.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838775,"byte_end":8838800,"line_start":215,"line_end":215,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838805,"byte_end":8838808,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838813,"byte_end":8838825,"line_start":217,"line_end":217,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838830,"byte_end":8838833,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The object must not be reachable by other threads anymore, otherwise it might be still in","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838838,"byte_end":8838931,"line_start":219,"line_end":219,"column_start":5,"column_end":98}},{"value":"/ use when the destructor runs.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838936,"byte_end":8838969,"line_start":220,"line_end":220,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838974,"byte_end":8838977,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Apart from that, keep in mind that another thread may execute the destructor, so the object","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8838982,"byte_end":8839077,"line_start":222,"line_end":222,"column_start":5,"column_end":100}},{"value":"/ must be sendable to other threads.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839082,"byte_end":8839120,"line_start":223,"line_end":223,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839125,"byte_end":8839128,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ We intentionally didn't require `T: Send`, because Rust's type systems usually cannot prove","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839133,"byte_end":8839228,"line_start":225,"line_end":225,"column_start":5,"column_end":100}},{"value":"/ `T: Send` for typical use cases. For example, consider the following code snippet, which","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839233,"byte_end":8839325,"line_start":226,"line_end":226,"column_start":5,"column_end":97}},{"value":"/ exemplifies the typical use case of deferring the deallocation of a shared reference:","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839330,"byte_end":8839419,"line_start":227,"line_end":227,"column_start":5,"column_end":94}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839424,"byte_end":8839427,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839432,"byte_end":8839445,"line_start":229,"line_end":229,"column_start":5,"column_end":18}},{"value":"/ let shared = Owned::new(7i32).into_shared(guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839450,"byte_end":8839503,"line_start":230,"line_end":230,"column_start":5,"column_end":58}},{"value":"/ guard.defer_destroy(shared); // `Shared` is not `Send`!","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839508,"byte_end":8839567,"line_start":231,"line_end":231,"column_start":5,"column_end":64}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839572,"byte_end":8839579,"line_start":232,"line_end":232,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839584,"byte_end":8839587,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ While `Shared` is not `Send`, it's safe for another thread to call the destructor, because","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839592,"byte_end":8839686,"line_start":234,"line_end":234,"column_start":5,"column_end":99}},{"value":"/ it's called only after the grace period and `shared` is no longer shared with other","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839691,"byte_end":8839778,"line_start":235,"line_end":235,"column_start":5,"column_end":92}},{"value":"/ threads. But we don't expect type systems to prove this.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839783,"byte_end":8839843,"line_start":236,"line_end":236,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839848,"byte_end":8839851,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839856,"byte_end":8839870,"line_start":238,"line_end":238,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839875,"byte_end":8839878,"line_start":239,"line_end":239,"column_start":5,"column_end":8}},{"value":"/ When a heap-allocated object in a data structure becomes unreachable, it has to be","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839883,"byte_end":8839969,"line_start":240,"line_end":240,"column_start":5,"column_end":91}},{"value":"/ deallocated. However, the current thread and other threads may be still holding references","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8839974,"byte_end":8840068,"line_start":241,"line_end":241,"column_start":5,"column_end":99}},{"value":"/ on the stack to that same object. Therefore it cannot be deallocated before those references","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840073,"byte_end":8840169,"line_start":242,"line_end":242,"column_start":5,"column_end":101}},{"value":"/ get dropped. This method can defer deallocation until all those threads get unpinned and","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840174,"byte_end":8840266,"line_start":243,"line_end":243,"column_start":5,"column_end":97}},{"value":"/ consequently drop all their references on the stack.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840271,"byte_end":8840327,"line_start":244,"line_end":244,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840332,"byte_end":8840335,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840340,"byte_end":8840347,"line_start":246,"line_end":246,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic, Owned};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840352,"byte_end":8840408,"line_start":247,"line_end":247,"column_start":5,"column_end":61}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840413,"byte_end":8840457,"line_start":248,"line_end":248,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840462,"byte_end":8840465,"line_start":249,"line_end":249,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(\"foo\");","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840470,"byte_end":8840501,"line_start":250,"line_end":250,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840506,"byte_end":8840509,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ // Now suppose that `a` is shared among multiple threads and concurrently","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840514,"byte_end":8840591,"line_start":252,"line_end":252,"column_start":5,"column_end":82}},{"value":"/ // accessed and modified...","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840596,"byte_end":8840627,"line_start":253,"line_end":253,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840632,"byte_end":8840635,"line_start":254,"line_end":254,"column_start":5,"column_end":8}},{"value":"/ // Pin the current thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840640,"byte_end":8840670,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840675,"byte_end":8840705,"line_start":256,"line_end":256,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840710,"byte_end":8840713,"line_start":257,"line_end":257,"column_start":5,"column_end":8}},{"value":"/ // Steal the object currently stored in `a` and swap it with another one.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840718,"byte_end":8840795,"line_start":258,"line_end":258,"column_start":5,"column_end":82}},{"value":"/ let p = a.swap(Owned::new(\"bar\").into_shared(guard), SeqCst, guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840800,"byte_end":8840872,"line_start":259,"line_end":259,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840877,"byte_end":8840880,"line_start":260,"line_end":260,"column_start":5,"column_end":8}},{"value":"/ if !p.is_null() {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840885,"byte_end":8840906,"line_start":261,"line_end":261,"column_start":5,"column_end":26}},{"value":"/     // The object `p` is pointing to is now unreachable.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840911,"byte_end":8840971,"line_start":262,"line_end":262,"column_start":5,"column_end":65}},{"value":"/     // Defer its deallocation until all currently pinned threads get unpinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8840976,"byte_end":8841058,"line_start":263,"line_end":263,"column_start":5,"column_end":87}},{"value":"/     unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841063,"byte_end":8841079,"line_start":264,"line_end":264,"column_start":5,"column_end":21}},{"value":"/         guard.defer_destroy(p);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841084,"byte_end":8841119,"line_start":265,"line_end":265,"column_start":5,"column_end":40}},{"value":"/     }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841124,"byte_end":8841133,"line_start":266,"line_end":266,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841138,"byte_end":8841143,"line_start":267,"line_end":267,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841148,"byte_end":8841155,"line_start":268,"line_end":268,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841160,"byte_end":8841163,"line_start":269,"line_end":269,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841168,"byte_end":8841208,"line_start":270,"line_end":270,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842213,"byte_end":8842218,"line_start":299,"line_end":299,"column_start":12,"column_end":17},"name":"flush","qualname":"<Guard>::flush","value":"pub fn flush(&Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears up the thread-local cache of deferred functions by executing them or moving into the\n global cache.","sig":null,"attributes":[{"value":"/ Clears up the thread-local cache of deferred functions by executing them or moving into the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841336,"byte_end":8841431,"line_start":275,"line_end":275,"column_start":5,"column_end":100}},{"value":"/ global cache.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841436,"byte_end":8841453,"line_start":276,"line_end":276,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841458,"byte_end":8841461,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Call this method after deferring execution of a function if you want to get it executed as","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841466,"byte_end":8841560,"line_start":278,"line_end":278,"column_start":5,"column_end":99}},{"value":"/ soon as possible. Flushing will make sure it is residing in in the global cache, so that","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841565,"byte_end":8841657,"line_start":279,"line_end":279,"column_start":5,"column_end":97}},{"value":"/ any thread has a chance of taking the function and executing it.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841662,"byte_end":8841730,"line_start":280,"line_end":280,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841735,"byte_end":8841738,"line_start":281,"line_end":281,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, it is a no-op (nothing happens).","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841743,"byte_end":8841835,"line_start":282,"line_end":282,"column_start":5,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841840,"byte_end":8841843,"line_start":283,"line_end":283,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841848,"byte_end":8841862,"line_start":284,"line_end":284,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841867,"byte_end":8841870,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841875,"byte_end":8841882,"line_start":286,"line_end":286,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841887,"byte_end":8841920,"line_start":287,"line_end":287,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841925,"byte_end":8841928,"line_start":288,"line_end":288,"column_start":5,"column_end":8}},{"value":"/ let guard = &epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841933,"byte_end":8841963,"line_start":289,"line_end":289,"column_start":5,"column_end":35}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841968,"byte_end":8841980,"line_start":290,"line_end":290,"column_start":5,"column_end":17}},{"value":"/     guard.defer(move || {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8841985,"byte_end":8842014,"line_start":291,"line_end":291,"column_start":5,"column_end":34}},{"value":"/         println!(\"This better be printed as soon as possible!\");","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842019,"byte_end":8842087,"line_start":292,"line_end":292,"column_start":5,"column_end":73}},{"value":"/     });","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842092,"byte_end":8842103,"line_start":293,"line_end":293,"column_start":5,"column_end":16}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842108,"byte_end":8842113,"line_start":294,"line_end":294,"column_start":5,"column_end":10}},{"value":"/ guard.flush();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842118,"byte_end":8842136,"line_start":295,"line_end":295,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842141,"byte_end":8842148,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842153,"byte_end":8842156,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842161,"byte_end":8842201,"line_start":298,"line_end":298,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843491,"byte_end":8843496,"line_start":336,"line_end":336,"column_start":12,"column_end":17},"name":"repin","qualname":"<Guard>::repin","value":"pub fn repin(&mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Unpins and then immediately re-pins the thread.","sig":null,"attributes":[{"value":"/ Unpins and then immediately re-pins the thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842342,"byte_end":8842393,"line_start":305,"line_end":305,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842398,"byte_end":8842401,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you don't want delay the advancement of the global epoch by","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842406,"byte_end":8842496,"line_start":307,"line_end":307,"column_start":5,"column_end":95}},{"value":"/ holding an old epoch. For safety, you should not maintain any guard-based reference across","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842501,"byte_end":8842595,"line_start":308,"line_end":308,"column_start":5,"column_end":99}},{"value":"/ the call (the latter is enforced by `&mut self`). The thread will only be repinned if this","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842600,"byte_end":8842694,"line_start":309,"line_end":309,"column_start":5,"column_end":99}},{"value":"/ is the only active guard for the current thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842699,"byte_end":8842751,"line_start":310,"line_end":310,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842756,"byte_end":8842759,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the call will be just no-op.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842764,"byte_end":8842857,"line_start":312,"line_end":312,"column_start":5,"column_end":98}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842862,"byte_end":8842865,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842870,"byte_end":8842884,"line_start":314,"line_end":314,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842889,"byte_end":8842892,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842897,"byte_end":8842904,"line_start":316,"line_end":316,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842909,"byte_end":8842958,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8842963,"byte_end":8843007,"line_start":318,"line_end":318,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843012,"byte_end":8843032,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843037,"byte_end":8843065,"line_start":320,"line_end":320,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843070,"byte_end":8843073,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843078,"byte_end":8843107,"line_start":322,"line_end":322,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843112,"byte_end":8843145,"line_start":323,"line_end":323,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843150,"byte_end":8843155,"line_start":324,"line_end":324,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843160,"byte_end":8843199,"line_start":325,"line_end":325,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843204,"byte_end":8843258,"line_start":326,"line_end":326,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843263,"byte_end":8843268,"line_start":327,"line_end":327,"column_start":5,"column_end":10}},{"value":"/ guard.repin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843273,"byte_end":8843291,"line_start":328,"line_end":328,"column_start":5,"column_end":23}},{"value":"/ {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843296,"byte_end":8843301,"line_start":329,"line_end":329,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843306,"byte_end":8843345,"line_start":330,"line_end":330,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843350,"byte_end":8843404,"line_start":331,"line_end":331,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843409,"byte_end":8843414,"line_start":332,"line_end":332,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843419,"byte_end":8843426,"line_start":333,"line_end":333,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843431,"byte_end":8843434,"line_start":334,"line_end":334,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843439,"byte_end":8843479,"line_start":335,"line_end":335,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844876,"byte_end":8844887,"line_start":374,"line_end":374,"column_start":12,"column_end":23},"name":"repin_after","qualname":"<Guard>::repin_after","value":"pub fn repin_after<F, R>(&mut Self, F) -> R where F: FnOnce() -> R","parent":null,"children":[],"decl_id":null,"docs":" Temporarily unpins the thread, executes the given function and then re-pins the thread.","sig":null,"attributes":[{"value":"/ Temporarily unpins the thread, executes the given function and then re-pins the thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843620,"byte_end":8843711,"line_start":342,"line_end":342,"column_start":5,"column_end":96}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843716,"byte_end":8843719,"line_start":343,"line_end":343,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to perform a long-running operation (e.g. sleeping)","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843724,"byte_end":8843815,"line_start":344,"line_end":344,"column_start":5,"column_end":96}},{"value":"/ and don't need to maintain any guard-based reference across the call (the latter is enforced","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843820,"byte_end":8843916,"line_start":345,"line_end":345,"column_start":5,"column_end":101}},{"value":"/ by `&mut self`). The thread will only be unpinned if this is the only active guard for the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8843921,"byte_end":8844015,"line_start":346,"line_end":346,"column_start":5,"column_end":99}},{"value":"/ current thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844020,"byte_end":8844039,"line_start":347,"line_end":347,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844044,"byte_end":8844047,"line_start":348,"line_end":348,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then the passed function is called","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844052,"byte_end":8844146,"line_start":349,"line_end":349,"column_start":5,"column_end":99}},{"value":"/ directly without unpinning the thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844151,"byte_end":8844193,"line_start":350,"line_end":350,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844198,"byte_end":8844201,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844206,"byte_end":8844220,"line_start":352,"line_end":352,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844225,"byte_end":8844228,"line_start":353,"line_end":353,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844233,"byte_end":8844240,"line_start":354,"line_end":354,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844245,"byte_end":8844294,"line_start":355,"line_end":355,"column_start":5,"column_end":54}},{"value":"/ use std::sync::atomic::Ordering::SeqCst;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844299,"byte_end":8844343,"line_start":356,"line_end":356,"column_start":5,"column_end":49}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844348,"byte_end":8844368,"line_start":357,"line_end":357,"column_start":5,"column_end":25}},{"value":"/ use std::time::Duration;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844373,"byte_end":8844401,"line_start":358,"line_end":358,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844406,"byte_end":8844409,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ let a = Atomic::new(777);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844414,"byte_end":8844443,"line_start":360,"line_end":360,"column_start":5,"column_end":34}},{"value":"/ let mut guard = epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844448,"byte_end":8844481,"line_start":361,"line_end":361,"column_start":5,"column_end":38}},{"value":"/ {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844486,"byte_end":8844491,"line_start":362,"line_end":362,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844496,"byte_end":8844535,"line_start":363,"line_end":363,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844540,"byte_end":8844594,"line_start":364,"line_end":364,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844599,"byte_end":8844604,"line_start":365,"line_end":365,"column_start":5,"column_end":10}},{"value":"/ guard.repin_after(|| thread::sleep(Duration::from_millis(50)));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844609,"byte_end":8844676,"line_start":366,"line_end":366,"column_start":5,"column_end":72}},{"value":"/ {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844681,"byte_end":8844686,"line_start":367,"line_end":367,"column_start":5,"column_end":10}},{"value":"/     let p = a.load(SeqCst, &guard);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844691,"byte_end":8844730,"line_start":368,"line_end":368,"column_start":5,"column_end":44}},{"value":"/     assert_eq!(unsafe { p.as_ref() }, Some(&777));","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844735,"byte_end":8844789,"line_start":369,"line_end":369,"column_start":5,"column_end":59}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844794,"byte_end":8844799,"line_start":370,"line_end":370,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844804,"byte_end":8844811,"line_start":371,"line_end":371,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844816,"byte_end":8844819,"line_start":372,"line_end":372,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8844824,"byte_end":8844864,"line_start":373,"line_end":373,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846094,"byte_end":8846103,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"collector","qualname":"<Guard>::collector","value":"pub fn collector(&Self) -> Option<&Collector>","parent":null,"children":[],"decl_id":null,"docs":" Returns the `Collector` associated with this guard.","sig":null,"attributes":[{"value":"/ Returns the `Collector` associated with this guard.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845492,"byte_end":8845547,"line_start":396,"line_end":396,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845552,"byte_end":8845555,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ This method is useful when you need to ensure that all guards used with","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845560,"byte_end":8845635,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ a data structure come from the same collector.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845640,"byte_end":8845690,"line_start":399,"line_end":399,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845695,"byte_end":8845698,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ If this method is called from an [`unprotected`] guard, then `None` is returned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845703,"byte_end":8845787,"line_start":401,"line_end":401,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845792,"byte_end":8845795,"line_start":402,"line_end":402,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845800,"byte_end":8845814,"line_start":403,"line_end":403,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845819,"byte_end":8845822,"line_start":404,"line_end":404,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845827,"byte_end":8845834,"line_start":405,"line_end":405,"column_start":5,"column_end":12}},{"value":"/ use crossbeam_epoch as epoch;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845839,"byte_end":8845872,"line_start":406,"line_end":406,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845877,"byte_end":8845880,"line_start":407,"line_end":407,"column_start":5,"column_end":8}},{"value":"/ let mut guard1 = epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845885,"byte_end":8845919,"line_start":408,"line_end":408,"column_start":5,"column_end":39}},{"value":"/ let mut guard2 = epoch::pin();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845924,"byte_end":8845958,"line_start":409,"line_end":409,"column_start":5,"column_end":39}},{"value":"/ assert!(guard1.collector() == guard2.collector());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8845963,"byte_end":8846017,"line_start":410,"line_end":410,"column_start":5,"column_end":59}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846022,"byte_end":8846029,"line_start":411,"line_end":411,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846034,"byte_end":8846037,"line_start":412,"line_end":412,"column_start":5,"column_end":8}},{"value":"/ [`unprotected`]: fn.unprotected.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846042,"byte_end":8846082,"line_start":413,"line_end":413,"column_start":5,"column_end":45}}]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849421,"byte_end":8849432,"line_start":520,"line_end":520,"column_start":15,"column_end":26},"name":"unprotected","qualname":"::guard::unprotected","value":"pub unsafe fn unprotected() -> &'static Guard","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","sig":null,"attributes":[{"value":"/ Returns a reference to a dummy guard that allows unprotected access to [`Atomic`]s.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846509,"byte_end":8846596,"line_start":434,"line_end":434,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846597,"byte_end":8846600,"line_start":435,"line_end":435,"column_start":1,"column_end":4}},{"value":"/ This guard should be used in special occasions only. Note that it doesn't actually keep any","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846601,"byte_end":8846696,"line_start":436,"line_end":436,"column_start":1,"column_end":96}},{"value":"/ thread pinned - it's just a fake guard that allows loading from [`Atomic`]s unsafely.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846697,"byte_end":8846786,"line_start":437,"line_end":437,"column_start":1,"column_end":90}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846787,"byte_end":8846790,"line_start":438,"line_end":438,"column_start":1,"column_end":4}},{"value":"/ Note that calling [`defer`] with a dummy guard will not defer the function - it will just","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846791,"byte_end":8846884,"line_start":439,"line_end":439,"column_start":1,"column_end":94}},{"value":"/ execute the function immediately.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846885,"byte_end":8846922,"line_start":440,"line_end":440,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846923,"byte_end":8846926,"line_start":441,"line_end":441,"column_start":1,"column_end":4}},{"value":"/ If necessary, it's possible to create more dummy guards by cloning: `unprotected().clone()`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846927,"byte_end":8847023,"line_start":442,"line_end":442,"column_start":1,"column_end":97}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847024,"byte_end":8847027,"line_start":443,"line_end":443,"column_start":1,"column_end":4}},{"value":"/ # Safety","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847028,"byte_end":8847040,"line_start":444,"line_end":444,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847041,"byte_end":8847044,"line_start":445,"line_end":445,"column_start":1,"column_end":4}},{"value":"/ Loading and dereferencing data from an [`Atomic`] using this guard is safe only if the","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847045,"byte_end":8847135,"line_start":446,"line_end":446,"column_start":1,"column_end":91}},{"value":"/ [`Atomic`] is not being concurrently modified by other threads.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847136,"byte_end":8847203,"line_start":447,"line_end":447,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847204,"byte_end":8847207,"line_start":448,"line_end":448,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847208,"byte_end":8847222,"line_start":449,"line_end":449,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847223,"byte_end":8847226,"line_start":450,"line_end":450,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847227,"byte_end":8847234,"line_start":451,"line_end":451,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847235,"byte_end":8847284,"line_start":452,"line_end":452,"column_start":1,"column_end":50}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847285,"byte_end":8847330,"line_start":453,"line_end":453,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847331,"byte_end":8847334,"line_start":454,"line_end":454,"column_start":1,"column_end":4}},{"value":"/ let a = Atomic::new(7);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847335,"byte_end":8847362,"line_start":455,"line_end":455,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847363,"byte_end":8847366,"line_start":456,"line_end":456,"column_start":1,"column_end":4}},{"value":"/ unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847367,"byte_end":8847379,"line_start":457,"line_end":457,"column_start":1,"column_end":13}},{"value":"/     // Load `a` without pinning the current thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847380,"byte_end":8847435,"line_start":458,"line_end":458,"column_start":1,"column_end":56}},{"value":"/     a.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847436,"byte_end":8847482,"line_start":459,"line_end":459,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847483,"byte_end":8847486,"line_start":460,"line_end":460,"column_start":1,"column_end":4}},{"value":"/     // It's possible to create more dummy guards by calling `clone()`.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847487,"byte_end":8847561,"line_start":461,"line_end":461,"column_start":1,"column_end":75}},{"value":"/     let dummy = &epoch::unprotected().clone();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847562,"byte_end":8847612,"line_start":462,"line_end":462,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847613,"byte_end":8847616,"line_start":463,"line_end":463,"column_start":1,"column_end":4}},{"value":"/     dummy.defer(move || {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847617,"byte_end":8847646,"line_start":464,"line_end":464,"column_start":1,"column_end":30}},{"value":"/         println!(\"This gets executed immediately.\");","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847647,"byte_end":8847703,"line_start":465,"line_end":465,"column_start":1,"column_end":57}},{"value":"/     });","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847704,"byte_end":8847715,"line_start":466,"line_end":466,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847716,"byte_end":8847719,"line_start":467,"line_end":467,"column_start":1,"column_end":4}},{"value":"/     // Dropping `dummy` doesn't affect the current thread - it's just a noop.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847720,"byte_end":8847801,"line_start":468,"line_end":468,"column_start":1,"column_end":82}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847802,"byte_end":8847807,"line_start":469,"line_end":469,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847808,"byte_end":8847815,"line_start":470,"line_end":470,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847816,"byte_end":8847819,"line_start":471,"line_end":471,"column_start":1,"column_end":4}},{"value":"/ The most common use of this function is when constructing or destructing a data structure.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847820,"byte_end":8847914,"line_start":472,"line_end":472,"column_start":1,"column_end":95}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847915,"byte_end":8847918,"line_start":473,"line_end":473,"column_start":1,"column_end":4}},{"value":"/ For example, we can use a dummy guard in the destructor of a Treiber stack because at that","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8847919,"byte_end":8848013,"line_start":474,"line_end":474,"column_start":1,"column_end":95}},{"value":"/ point no other thread could concurrently modify the [`Atomic`]s we are accessing.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848014,"byte_end":8848099,"line_start":475,"line_end":475,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848100,"byte_end":8848103,"line_start":476,"line_end":476,"column_start":1,"column_end":4}},{"value":"/ If we were to actually pin the current thread during destruction, that would just unnecessarily","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848104,"byte_end":8848203,"line_start":477,"line_end":477,"column_start":1,"column_end":100}},{"value":"/ delay garbage collection and incur some performance cost, so in cases like these `unprotected`","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848204,"byte_end":8848302,"line_start":478,"line_end":478,"column_start":1,"column_end":99}},{"value":"/ is very helpful.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848303,"byte_end":8848323,"line_start":479,"line_end":479,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848324,"byte_end":8848327,"line_start":480,"line_end":480,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848328,"byte_end":8848335,"line_start":481,"line_end":481,"column_start":1,"column_end":8}},{"value":"/ use crossbeam_epoch::{self as epoch, Atomic};","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848336,"byte_end":8848385,"line_start":482,"line_end":482,"column_start":1,"column_end":50}},{"value":"/ use std::mem::ManuallyDrop;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848386,"byte_end":8848417,"line_start":483,"line_end":483,"column_start":1,"column_end":32}},{"value":"/ use std::sync::atomic::Ordering::Relaxed;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848418,"byte_end":8848463,"line_start":484,"line_end":484,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848464,"byte_end":8848467,"line_start":485,"line_end":485,"column_start":1,"column_end":4}},{"value":"/ struct Stack<T> {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848468,"byte_end":8848489,"line_start":486,"line_end":486,"column_start":1,"column_end":22}},{"value":"/     head: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848490,"byte_end":8848520,"line_start":487,"line_end":487,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848521,"byte_end":8848526,"line_start":488,"line_end":488,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848527,"byte_end":8848530,"line_start":489,"line_end":489,"column_start":1,"column_end":4}},{"value":"/ struct Node<T> {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848531,"byte_end":8848551,"line_start":490,"line_end":490,"column_start":1,"column_end":21}},{"value":"/     data: ManuallyDrop<T>,","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848552,"byte_end":8848582,"line_start":491,"line_end":491,"column_start":1,"column_end":31}},{"value":"/     next: Atomic<Node<T>>,","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848583,"byte_end":8848613,"line_start":492,"line_end":492,"column_start":1,"column_end":31}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848614,"byte_end":8848619,"line_start":493,"line_end":493,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848620,"byte_end":8848623,"line_start":494,"line_end":494,"column_start":1,"column_end":4}},{"value":"/ impl<T> Drop for Stack<T> {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848624,"byte_end":8848655,"line_start":495,"line_end":495,"column_start":1,"column_end":32}},{"value":"/     fn drop(&mut self) {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848656,"byte_end":8848684,"line_start":496,"line_end":496,"column_start":1,"column_end":29}},{"value":"/         unsafe {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848685,"byte_end":8848705,"line_start":497,"line_end":497,"column_start":1,"column_end":21}},{"value":"/             // Unprotected load.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848706,"byte_end":8848742,"line_start":498,"line_end":498,"column_start":1,"column_end":37}},{"value":"/             let mut node = self.head.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848743,"byte_end":8848820,"line_start":499,"line_end":499,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848821,"byte_end":8848824,"line_start":500,"line_end":500,"column_start":1,"column_end":4}},{"value":"/             while let Some(n) = node.as_ref() {","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848825,"byte_end":8848876,"line_start":501,"line_end":501,"column_start":1,"column_end":52}},{"value":"/                 // Unprotected load.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848877,"byte_end":8848917,"line_start":502,"line_end":502,"column_start":1,"column_end":41}},{"value":"/                 let next = n.next.load(Relaxed, epoch::unprotected());","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848918,"byte_end":8848992,"line_start":503,"line_end":503,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848993,"byte_end":8848996,"line_start":504,"line_end":504,"column_start":1,"column_end":4}},{"value":"/                 // Take ownership of the node, then drop its data and deallocate it.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8848997,"byte_end":8849085,"line_start":505,"line_end":505,"column_start":1,"column_end":89}},{"value":"/                 let mut o = node.into_owned();","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849086,"byte_end":8849136,"line_start":506,"line_end":506,"column_start":1,"column_end":51}},{"value":"/                 ManuallyDrop::drop(&mut o.data);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849137,"byte_end":8849189,"line_start":507,"line_end":507,"column_start":1,"column_end":53}},{"value":"/                 drop(o);","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849190,"byte_end":8849218,"line_start":508,"line_end":508,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849219,"byte_end":8849222,"line_start":509,"line_end":509,"column_start":1,"column_end":4}},{"value":"/                 node = next;","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849223,"byte_end":8849255,"line_start":510,"line_end":510,"column_start":1,"column_end":33}},{"value":"/             }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849256,"byte_end":8849273,"line_start":511,"line_end":511,"column_start":1,"column_end":18}},{"value":"/         }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849274,"byte_end":8849287,"line_start":512,"line_end":512,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849288,"byte_end":8849297,"line_start":513,"line_end":513,"column_start":1,"column_end":10}},{"value":"/ }","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849298,"byte_end":8849303,"line_start":514,"line_end":514,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849304,"byte_end":8849311,"line_start":515,"line_end":515,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849312,"byte_end":8849315,"line_start":516,"line_end":516,"column_start":1,"column_end":4}},{"value":"/ [`Atomic`]: struct.Atomic.html","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849316,"byte_end":8849350,"line_start":517,"line_end":517,"column_start":1,"column_end":35}},{"value":"/ [`defer`]: struct.Guard.html#method.defer","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849351,"byte_end":8849396,"line_start":518,"line_end":518,"column_start":1,"column_end":46}},{"value":"inline","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8849397,"byte_end":8849406,"line_start":519,"line_end":519,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":778},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118447,"byte_end":10118450,"line_start":22,"line_end":22,"column_start":8,"column_end":11},"name":"pin","qualname":"::default::pin","value":"pub fn pin() -> Guard","parent":null,"children":[],"decl_id":null,"docs":" Pins the current thread.\n","sig":null,"attributes":[{"value":"/ Pins the current thread.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118401,"byte_end":10118429,"line_start":20,"line_end":20,"column_start":1,"column_end":29}},{"value":"inline","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118430,"byte_end":10118439,"line_start":21,"line_end":21,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":780},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118575,"byte_end":10118584,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"is_pinned","qualname":"::default::is_pinned","value":"pub fn is_pinned() -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns `true` if the current thread is pinned.\n","sig":null,"attributes":[{"value":"/ Returns `true` if the current thread is pinned.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118506,"byte_end":10118557,"line_start":26,"line_end":26,"column_start":1,"column_end":52}},{"value":"inline","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118558,"byte_end":10118567,"line_start":27,"line_end":27,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":782},"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118694,"byte_end":10118711,"line_start":33,"line_end":33,"column_start":8,"column_end":25},"name":"default_collector","qualname":"::default::default_collector","value":"pub fn default_collector() -> &'static Collector","parent":null,"children":[],"decl_id":null,"docs":" Returns the default global collector.\n","sig":null,"attributes":[{"value":"/ Returns the default global collector.","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\default.rs","byte_start":10118645,"byte_end":10118686,"line_start":32,"line_end":32,"column_start":1,"column_end":42}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777464,"byte_end":8777482,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778656,"byte_end":8778664,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":73},{"krate":0,"index":74}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780482,"byte_end":8780488,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780532,"byte_end":8780538,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780554,"byte_end":8780560,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":96},{"krate":0,"index":97},{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":101},{"krate":0,"index":103},{"krate":0,"index":106},{"krate":0,"index":109},{"krate":0,"index":115},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793712,"byte_end":8793718,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794042,"byte_end":8794048,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":133}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794278,"byte_end":8794284,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":136}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794611,"byte_end":8794617,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":139}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794709,"byte_end":8794715,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795110,"byte_end":8795116,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":145}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795219,"byte_end":8795225,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":148}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795325,"byte_end":8795331,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":152}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795680,"byte_end":8795686,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796633,"byte_end":8796638,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":166},{"krate":0,"index":167}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797151,"byte_end":8797156,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799901,"byte_end":8799906,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":179}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800089,"byte_end":8800094,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":182}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800369,"byte_end":8800374,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":185}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800495,"byte_end":8800500,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":188},{"krate":0,"index":189}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800666,"byte_end":8800671,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":192}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800830,"byte_end":8800835,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":195}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800925,"byte_end":8800930,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801383,"byte_end":8801388,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801473,"byte_end":8801478,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":204}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801575,"byte_end":8801580,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":207}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801661,"byte_end":8801666,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802125,"byte_end":8802131,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":219}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802291,"byte_end":8802297,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802336,"byte_end":8802342,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":226},{"krate":0,"index":227}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802594,"byte_end":8802600,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237},{"krate":0,"index":238},{"krate":0,"index":239}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809933,"byte_end":8809939,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":243}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810465,"byte_end":8810471,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":247}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810582,"byte_end":8810588,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810642,"byte_end":8810648,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810797,"byte_end":8810803,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810935,"byte_end":8810941,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8811225,"byte_end":8811231,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":266}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8811378,"byte_end":8811384,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":270}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812182,"byte_end":8812191,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812216,"byte_end":8812225,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812235,"byte_end":8812244,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":293},{"krate":0,"index":294}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812537,"byte_end":8812546,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":296}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812744,"byte_end":8812753,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812877,"byte_end":8812886,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":300}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813060,"byte_end":8813069,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813180,"byte_end":8813191,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813651,"byte_end":8813662,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":309}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813809,"byte_end":8813820,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":8823756,"byte_end":8823764,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":339}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":8823884,"byte_end":8823892,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":341},{"krate":0,"index":347}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":8827523,"byte_end":8827528,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":8829283,"byte_end":8829294,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832233,"byte_end":8832238,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":393},{"krate":0,"index":397},{"krate":0,"index":400},{"krate":0,"index":401},{"krate":0,"index":402},{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846228,"byte_end":8846233,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":408}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846403,"byte_end":8846408,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":410}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8852933,"byte_end":8852936,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8852946,"byte_end":8852949,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8853876,"byte_end":8853879,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8857388,"byte_end":8857391,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8857790,"byte_end":8857793,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8858215,"byte_end":8858224,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8858234,"byte_end":8858243,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":514}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8858918,"byte_end":8858924,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":520},{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":525}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8863663,"byte_end":8863668,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":543},{"krate":0,"index":544},{"krate":0,"index":545},{"krate":0,"index":546},{"krate":0,"index":547}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8872191,"byte_end":8872196,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8878169,"byte_end":8878174,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":595}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8878310,"byte_end":8878315,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":597}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8878821,"byte_end":8878825,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8881377,"byte_end":8881381,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":609}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8881914,"byte_end":8881918,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":614},{"krate":0,"index":615}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8891682,"byte_end":8891687,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8891724,"byte_end":8891729,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8891745,"byte_end":8891750,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":662},{"krate":0,"index":665},{"krate":0,"index":669},{"krate":0,"index":670}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8897318,"byte_end":8897323,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8777464,"byte_end":8777482,"line_start":35,"line_end":35,"column_start":60,"column_end":78},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":58},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8778656,"byte_end":8778664,"line_start":66,"line_end":66,"column_start":32,"column_end":40},"kind":{"Impl":{"id":1}},"from":{"krate":2,"index":37551},"to":{"krate":0,"index":69}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780482,"byte_end":8780488,"line_start":132,"line_end":132,"column_start":38,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2822}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780532,"byte_end":8780538,"line_start":133,"line_end":133,"column_start":38,"column_end":44},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2834}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8780554,"byte_end":8780560,"line_start":135,"line_end":135,"column_start":9,"column_end":15},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":86},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8793712,"byte_end":8793718,"line_start":513,"line_end":513,"column_start":24,"column_end":30},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794042,"byte_end":8794048,"line_start":525,"line_end":525,"column_start":26,"column_end":32},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":8725}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794278,"byte_end":8794284,"line_start":533,"line_end":533,"column_start":19,"column_end":25},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2447}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794611,"byte_end":8794617,"line_start":544,"line_end":544,"column_start":21,"column_end":27},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2800}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8794709,"byte_end":8794715,"line_start":550,"line_end":550,"column_start":28,"column_end":34},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795110,"byte_end":8795116,"line_start":567,"line_end":567,"column_start":26,"column_end":32},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795219,"byte_end":8795225,"line_start":573,"line_end":573,"column_start":21,"column_end":27},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795325,"byte_end":8795331,"line_start":579,"line_end":579,"column_start":37,"column_end":43},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8795680,"byte_end":8795686,"line_start":594,"line_end":594,"column_start":28,"column_end":34},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":86},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8796633,"byte_end":8796638,"line_start":630,"line_end":630,"column_start":24,"column_end":29},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":160},"to":{"krate":0,"index":156}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8797151,"byte_end":8797156,"line_start":653,"line_end":653,"column_start":9,"column_end":14},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":160},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8799901,"byte_end":8799906,"line_start":756,"line_end":756,"column_start":18,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800089,"byte_end":8800094,"line_start":765,"line_end":765,"column_start":24,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800369,"byte_end":8800374,"line_start":776,"line_end":776,"column_start":26,"column_end":31},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2447}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800495,"byte_end":8800500,"line_start":782,"line_end":782,"column_start":19,"column_end":24},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":3026}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800666,"byte_end":8800671,"line_start":791,"line_end":791,"column_start":22,"column_end":27},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":3039}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800830,"byte_end":8800835,"line_start":798,"line_end":798,"column_start":21,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8800925,"byte_end":8800930,"line_start":804,"line_end":804,"column_start":26,"column_end":31},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801383,"byte_end":8801388,"line_start":823,"line_end":823,"column_start":23,"column_end":28},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2425}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801473,"byte_end":8801478,"line_start":829,"line_end":829,"column_start":26,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2428}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801575,"byte_end":8801580,"line_start":835,"line_end":835,"column_start":22,"column_end":27},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2719}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8801661,"byte_end":8801666,"line_start":841,"line_end":841,"column_start":22,"column_end":27},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":160},"to":{"krate":2,"index":2722}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802125,"byte_end":8802131,"line_start":858,"line_end":858,"column_start":23,"column_end":29},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2447}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802291,"byte_end":8802297,"line_start":867,"line_end":867,"column_start":22,"column_end":28},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2832}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802336,"byte_end":8802342,"line_start":869,"line_end":869,"column_start":28,"column_end":34},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":211},"to":{"krate":0,"index":156}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8802594,"byte_end":8802600,"line_start":884,"line_end":884,"column_start":13,"column_end":19},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8809933,"byte_end":8809939,"line_start":1124,"line_end":1124,"column_start":32,"column_end":38},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2728}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810465,"byte_end":8810471,"line_start":1145,"line_end":1145,"column_start":42,"column_end":48},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2477}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810582,"byte_end":8810588,"line_start":1151,"line_end":1151,"column_start":20,"column_end":26},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810642,"byte_end":8810648,"line_start":1153,"line_end":1153,"column_start":43,"column_end":49},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2520}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810797,"byte_end":8810803,"line_start":1159,"line_end":1159,"column_start":21,"column_end":27},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2509}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8810935,"byte_end":8810941,"line_start":1165,"line_end":1165,"column_start":28,"column_end":34},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8811225,"byte_end":8811231,"line_start":1176,"line_end":1176,"column_start":30,"column_end":36},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":8725}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\atomic.rs","byte_start":8811378,"byte_end":8811384,"line_start":1182,"line_end":1182,"column_start":25,"column_end":31},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":211},"to":{"krate":2,"index":2800}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812182,"byte_end":8812191,"line_start":26,"line_end":26,"column_start":22,"column_end":31},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2822}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812216,"byte_end":8812225,"line_start":27,"line_end":27,"column_start":22,"column_end":31},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2834}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812235,"byte_end":8812244,"line_start":29,"line_end":29,"column_start":6,"column_end":15},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":288},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812537,"byte_end":8812546,"line_start":43,"line_end":43,"column_start":16,"column_end":25},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2447}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812744,"byte_end":8812753,"line_start":52,"line_end":52,"column_start":21,"column_end":30},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8812877,"byte_end":8812886,"line_start":58,"line_end":58,"column_start":20,"column_end":29},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2477}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813060,"byte_end":8813069,"line_start":64,"line_end":64,"column_start":13,"column_end":22},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":288},"to":{"krate":2,"index":2482}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813180,"byte_end":8813191,"line_start":71,"line_end":71,"column_start":6,"column_end":17},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":302},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813651,"byte_end":8813662,"line_start":91,"line_end":91,"column_start":15,"column_end":26},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":302},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\collector.rs","byte_start":8813809,"byte_end":8813820,"line_start":100,"line_end":100,"column_start":21,"column_end":32},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":302},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":8823756,"byte_end":8823764,"line_start":27,"line_end":27,"column_start":21,"column_end":29},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":334},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\deferred.rs","byte_start":8823884,"byte_end":8823892,"line_start":33,"line_end":33,"column_start":6,"column_end":14},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":334},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":8827523,"byte_end":8827528,"line_start":22,"line_end":22,"column_start":6,"column_end":11},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":708},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\epoch.rs","byte_start":8829283,"byte_end":8829294,"line_start":81,"line_end":81,"column_start":6,"column_end":17},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":724},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8832233,"byte_end":8832238,"line_start":72,"line_end":72,"column_start":6,"column_end":11},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":387},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846228,"byte_end":8846233,"line_start":419,"line_end":419,"column_start":15,"column_end":20},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\guard.rs","byte_start":8846403,"byte_end":8846408,"line_start":428,"line_end":428,"column_start":21,"column_end":26},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":387},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8852933,"byte_end":8852936,"line_start":69,"line_end":69,"column_start":22,"column_end":25},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2822}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8852946,"byte_end":8852949,"line_start":71,"line_end":71,"column_start":6,"column_end":9},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8853876,"byte_end":8853879,"line_start":106,"line_end":106,"column_start":18,"column_end":21},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":2800}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8857388,"byte_end":8857391,"line_start":195,"line_end":195,"column_start":15,"column_end":18},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8857790,"byte_end":8857793,"line_start":207,"line_end":207,"column_start":21,"column_end":24},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":495},"to":{"krate":2,"index":8708}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8858215,"byte_end":8858224,"line_start":225,"line_end":225,"column_start":22,"column_end":31},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":731},"to":{"krate":2,"index":2834}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8858234,"byte_end":8858243,"line_start":227,"line_end":227,"column_start":6,"column_end":15},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":731},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8858918,"byte_end":8858924,"line_start":248,"line_end":248,"column_start":6,"column_end":12},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":515},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8863663,"byte_end":8863668,"line_start":378,"line_end":378,"column_start":6,"column_end":11},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\internal.rs","byte_start":8872191,"byte_end":8872196,"line_start":598,"line_end":598,"column_start":27,"column_end":32},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":580}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8878169,"byte_end":8878174,"line_start":131,"line_end":131,"column_start":18,"column_end":23},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":738},"to":{"krate":2,"index":2800}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8878310,"byte_end":8878315,"line_start":140,"line_end":140,"column_start":6,"column_end":11},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":738},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8878821,"byte_end":8878825,"line_start":153,"line_end":153,"column_start":26,"column_end":30},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":742},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8881377,"byte_end":8881381,"line_start":218,"line_end":218,"column_start":35,"column_end":39},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":742},"to":{"krate":2,"index":3050}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\list.rs","byte_start":8881914,"byte_end":8881918,"line_start":235,"line_end":235,"column_start":47,"column_end":51},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":585},"to":{"krate":2,"index":7168}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8891682,"byte_end":8891687,"line_start":41,"line_end":41,"column_start":31,"column_end":36},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":2834}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8891724,"byte_end":8891729,"line_start":42,"line_end":42,"column_start":31,"column_end":36},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":2822}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8891745,"byte_end":8891750,"line_start":44,"line_end":44,"column_start":9,"column_end":14},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":759},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\henri\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\crossbeam-epoch-0.8.2\\src\\sync\\queue.rs","byte_start":8897318,"byte_end":8897323,"line_start":192,"line_end":192,"column_start":18,"column_end":23},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":759},"to":{"krate":2,"index":3050}}]}